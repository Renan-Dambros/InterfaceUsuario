{"ast":null,"code":"import _defineProperty from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { r as raf } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\nimport { b as getIonMode } from './ionic-global.js';\nvar segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;width:auto}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\nvar segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent;grid-auto-columns:minmax(auto, 360px)}:host(.in-toolbar){min-height:var(--min-height)}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\nvar Segment = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(Segment, _HTMLElement);\n  var _super = _createSuper(Segment);\n  function Segment() {\n    var _this;\n    _classCallCheck(this, Segment);\n    _this = _super.call(this);\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.ionChange = createEvent(_assertThisInitialized(_this), \"ionChange\", 7);\n    _this.ionSelect = createEvent(_assertThisInitialized(_this), \"ionSelect\", 7);\n    _this.ionStyle = createEvent(_assertThisInitialized(_this), \"ionStyle\", 7);\n    _this.onClick = function (ev) {\n      var current = ev.target;\n      var previous = _this.checked;\n      // If the current element is a segment then that means\n      // the user tried to swipe to a segment button and\n      // click a segment button at the same time so we should\n      // not update the checked segment button\n      if (current.tagName === 'ION-SEGMENT') {\n        return;\n      }\n      _this.value = current.value;\n      if (current !== previous) {\n        _this.emitValueChange();\n      }\n      if (_this.scrollable || !_this.swipeGesture) {\n        if (previous) {\n          _this.checkButton(previous, current);\n        } else {\n          _this.setCheckedClasses();\n        }\n      }\n    };\n    _this.getSegmentButton = function (selector) {\n      var _a, _b;\n      var buttons = _this.getButtons().filter(function (button) {\n        return !button.disabled;\n      });\n      var currIndex = buttons.findIndex(function (button) {\n        return button === document.activeElement;\n      });\n      switch (selector) {\n        case 'first':\n          return buttons[0];\n        case 'last':\n          return buttons[buttons.length - 1];\n        case 'next':\n          return (_a = buttons[currIndex + 1]) !== null && _a !== void 0 ? _a : buttons[0];\n        case 'previous':\n          return (_b = buttons[currIndex - 1]) !== null && _b !== void 0 ? _b : buttons[buttons.length - 1];\n        default:\n          return null;\n      }\n    };\n    _this.activated = false;\n    _this.color = undefined;\n    _this.disabled = false;\n    _this.scrollable = false;\n    _this.swipeGesture = true;\n    _this.value = undefined;\n    _this.selectOnFocus = false;\n    return _this;\n  }\n  _createClass(Segment, [{\n    key: \"colorChanged\",\n    value: function colorChanged(value, oldValue) {\n      /**\n       * If color is set after not having\n       * previously been set (or vice versa),\n       * we need to emit style so the segment-buttons\n       * can apply their color classes properly.\n       */\n      if (oldValue === undefined && value !== undefined || oldValue !== undefined && value === undefined) {\n        this.emitStyle();\n      }\n    }\n  }, {\n    key: \"swipeGestureChanged\",\n    value: function swipeGestureChanged() {\n      this.gestureChanged();\n    }\n  }, {\n    key: \"valueChanged\",\n    value: function valueChanged(value) {\n      /**\n       * `ionSelect` is emitted every time the value changes (internal or external changes).\n       * Used by `ion-segment-button` to determine if the button should be checked.\n       */\n      this.ionSelect.emit({\n        value: value\n      });\n      this.scrollActiveButtonIntoView();\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.gestureChanged();\n      var buttons = this.getButtons();\n      var _iterator = _createForOfIteratorHelper(buttons),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var button = _step.value;\n          button.disabled = this.disabled;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"gestureChanged\",\n    value: function gestureChanged() {\n      if (this.gesture) {\n        this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function () {\n      var _componentDidLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.setCheckedClasses();\n              /**\n               * We need to wait for the buttons to all be rendered\n               * before we can scroll.\n               */\n              raf(function () {\n                _this2.scrollActiveButtonIntoView();\n              });\n              _context.next = 4;\n              return import('./index3.js');\n            case 4:\n              this.gesture = _context.sent.createGesture({\n                el: this.el,\n                gestureName: 'segment',\n                gesturePriority: 100,\n                threshold: 0,\n                passive: false,\n                onStart: function onStart(ev) {\n                  return _this2.onStart(ev);\n                },\n                onMove: function onMove(ev) {\n                  return _this2.onMove(ev);\n                },\n                onEnd: function onEnd(ev) {\n                  return _this2.onEnd(ev);\n                }\n              });\n              this.gestureChanged();\n              if (this.disabled) {\n                this.disabledChanged();\n              }\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function componentDidLoad() {\n        return _componentDidLoad.apply(this, arguments);\n      }\n      return componentDidLoad;\n    }()\n  }, {\n    key: \"onStart\",\n    value: function onStart(detail) {\n      this.valueBeforeGesture = this.value;\n      this.activate(detail);\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      this.setNextIndex(detail);\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(detail) {\n      this.setActivated(false);\n      this.setNextIndex(detail, true);\n      detail.event.stopImmediatePropagation();\n      var value = this.value;\n      if (value !== undefined) {\n        if (this.valueBeforeGesture !== value) {\n          this.emitValueChange();\n        }\n      }\n      this.valueBeforeGesture = undefined;\n    }\n    /**\n     * Emits an `ionChange` event.\n     *\n     * This API should be called for user committed changes.\n     * This API should not be used for external value changes.\n     */\n  }, {\n    key: \"emitValueChange\",\n    value: function emitValueChange() {\n      var value = this.value;\n      this.ionChange.emit({\n        value: value\n      });\n    }\n  }, {\n    key: \"getButtons\",\n    value: function getButtons() {\n      return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n  }, {\n    key: \"checked\",\n    get: function get() {\n      var _this3 = this;\n      return this.getButtons().find(function (button) {\n        return button.value === _this3.value;\n      });\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n  }, {\n    key: \"setActivated\",\n    value: function setActivated(activated) {\n      var buttons = this.getButtons();\n      buttons.forEach(function (button) {\n        if (activated) {\n          button.classList.add('segment-button-activated');\n        } else {\n          button.classList.remove('segment-button-activated');\n        }\n      });\n      this.activated = activated;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(detail) {\n      var _this4 = this;\n      var clicked = detail.event.target;\n      var buttons = this.getButtons();\n      var checked = buttons.find(function (button) {\n        return button.value === _this4.value;\n      });\n      // Make sure we are only checking for activation on a segment button\n      // since disabled buttons will get the click on the segment\n      if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n        return;\n      }\n      // If there are no checked buttons, set the current button to checked\n      if (!checked) {\n        this.value = clicked.value;\n        this.setCheckedClasses();\n      }\n      // If the gesture began on the clicked button with the indicator\n      // then we should activate the indicator\n      if (this.value === clicked.value) {\n        this.setActivated(true);\n      }\n    }\n  }, {\n    key: \"getIndicator\",\n    value: function getIndicator(button) {\n      var root = button.shadowRoot || button;\n      return root.querySelector('.segment-button-indicator');\n    }\n  }, {\n    key: \"checkButton\",\n    value: function checkButton(previous, current) {\n      var previousIndicator = this.getIndicator(previous);\n      var currentIndicator = this.getIndicator(current);\n      if (previousIndicator === null || currentIndicator === null) {\n        return;\n      }\n      var previousClientRect = previousIndicator.getBoundingClientRect();\n      var currentClientRect = currentIndicator.getBoundingClientRect();\n      var widthDelta = previousClientRect.width / currentClientRect.width;\n      var xPosition = previousClientRect.left - currentClientRect.left;\n      // Scale the indicator width to match the previous indicator width\n      // and translate it on top of the previous indicator\n      var transform = \"translate3d(\".concat(xPosition, \"px, 0, 0) scaleX(\").concat(widthDelta, \")\");\n      writeTask(function () {\n        // Remove the transition before positioning on top of the previous indicator\n        currentIndicator.classList.remove('segment-button-indicator-animated');\n        currentIndicator.style.setProperty('transform', transform);\n        // Force a repaint to ensure the transform happens\n        currentIndicator.getBoundingClientRect();\n        // Add the transition to move the indicator into place\n        currentIndicator.classList.add('segment-button-indicator-animated');\n        // Remove the transform to slide the indicator back to the button clicked\n        currentIndicator.style.setProperty('transform', '');\n      });\n      this.value = current.value;\n      this.setCheckedClasses();\n    }\n  }, {\n    key: \"setCheckedClasses\",\n    value: function setCheckedClasses() {\n      var _this5 = this;\n      var buttons = this.getButtons();\n      var index = buttons.findIndex(function (button) {\n        return button.value === _this5.value;\n      });\n      var next = index + 1;\n      var _iterator2 = _createForOfIteratorHelper(buttons),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var button = _step2.value;\n          button.classList.remove('segment-button-after-checked');\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (next < buttons.length) {\n        buttons[next].classList.add('segment-button-after-checked');\n      }\n    }\n  }, {\n    key: \"scrollActiveButtonIntoView\",\n    value: function scrollActiveButtonIntoView() {\n      var scrollable = this.scrollable,\n        value = this.value;\n      if (scrollable) {\n        var buttons = this.getButtons();\n        var activeButton = buttons.find(function (button) {\n          return button.value === value;\n        });\n        if (activeButton !== undefined) {\n          /**\n           * Scrollable segment buttons should be\n           * centered within the view including\n           * buttons that are partially offscreen.\n           */\n          activeButton.scrollIntoView({\n            behavior: 'smooth',\n            inline: 'center',\n            /**\n             * Segment should scroll on the\n             * horizontal axis. `block: 'nearest'`\n             * ensures that the vertical axis\n             * does not scroll if the segment\n             * as a whole is already in view.\n             */\n            block: 'nearest'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setNextIndex\",\n    value: function setNextIndex(detail) {\n      var _this6 = this;\n      var isEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var rtl = isRTL(this.el);\n      var activated = this.activated;\n      var buttons = this.getButtons();\n      var index = buttons.findIndex(function (button) {\n        return button.value === _this6.value;\n      });\n      var previous = buttons[index];\n      var current;\n      var nextIndex;\n      if (index === -1) {\n        return;\n      }\n      // Get the element that the touch event started on in case\n      // it was the checked button, then we will move the indicator\n      var rect = previous.getBoundingClientRect();\n      var left = rect.left;\n      var width = rect.width;\n      // Get the element that the gesture is on top of based on the currentX of the\n      // gesture event and the Y coordinate of the starting element, since the gesture\n      // can move up and down off of the segment\n      var currentX = detail.currentX;\n      var previousY = rect.top + rect.height / 2;\n      /**\n       * Segment can be used inside the shadow dom\n       * so doing document.elementFromPoint would never\n       * return a segment button in that instance.\n       * We use getRootNode to which will return the parent\n       * shadow root if used inside a shadow component and\n       * returns document otherwise.\n       */\n      var root = this.el.getRootNode();\n      var nextEl = root.elementFromPoint(currentX, previousY);\n      var decreaseIndex = rtl ? currentX > left + width : currentX < left;\n      var increaseIndex = rtl ? currentX < left : currentX > left + width;\n      // If the indicator is currently activated then we have started the gesture\n      // on top of the checked button so we need to slide the indicator\n      // by checking the button next to it as we move\n      if (activated && !isEnd) {\n        // Decrease index, move left in LTR & right in RTL\n        if (decreaseIndex) {\n          var newIndex = index - 1;\n          if (newIndex >= 0) {\n            nextIndex = newIndex;\n          }\n          // Increase index, moves right in LTR & left in RTL\n        } else if (increaseIndex) {\n          if (activated && !isEnd) {\n            var _newIndex = index + 1;\n            if (_newIndex < buttons.length) {\n              nextIndex = _newIndex;\n            }\n          }\n        }\n        if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n          current = buttons[nextIndex];\n        }\n      }\n      // If the indicator is not activated then we will just set the indicator\n      // to the element where the gesture ended\n      if (!activated && isEnd) {\n        current = nextEl;\n      }\n      if (current != null) {\n        /**\n         * If current element is ion-segment then that means\n         * user tried to select a disabled ion-segment-button,\n         * and we should not update the ripple.\n         */\n        if (current.tagName === 'ION-SEGMENT') {\n          return false;\n        }\n        if (previous !== current) {\n          this.checkButton(previous, current);\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        segment: true\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(ev) {\n      var rtl = isRTL(this.el);\n      var keyDownSelectsButton = this.selectOnFocus;\n      var current;\n      switch (ev.key) {\n        case 'ArrowRight':\n          ev.preventDefault();\n          current = rtl ? this.getSegmentButton('previous') : this.getSegmentButton('next');\n          break;\n        case 'ArrowLeft':\n          ev.preventDefault();\n          current = rtl ? this.getSegmentButton('next') : this.getSegmentButton('previous');\n          break;\n        case 'Home':\n          ev.preventDefault();\n          current = this.getSegmentButton('first');\n          break;\n        case 'End':\n          ev.preventDefault();\n          current = this.getSegmentButton('last');\n          break;\n        case ' ':\n        case 'Enter':\n          ev.preventDefault();\n          current = document.activeElement;\n          keyDownSelectsButton = true;\n      }\n      if (!current) {\n        return;\n      }\n      if (keyDownSelectsButton) {\n        var previous = this.checked;\n        this.checkButton(previous || current, current);\n        if (current !== previous) {\n          this.emitValueChange();\n        }\n      }\n      current.setFocus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses;\n      var mode = getIonMode(this);\n      return h(Host, {\n        role: \"tablist\",\n        onClick: this.onClick,\n        class: createColorClasses(this.color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'in-toolbar', hostContext('ion-toolbar', this.el)), _defineProperty(_createColorClasses, 'in-toolbar-color', hostContext('ion-toolbar[color]', this.el)), _defineProperty(_createColorClasses, 'segment-activated', this.activated), _defineProperty(_createColorClasses, 'segment-disabled', this.disabled), _defineProperty(_createColorClasses, 'segment-scrollable', this.scrollable), _createColorClasses))\n      }, h(\"slot\", null));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"color\": [\"colorChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: segmentIosCss,\n        md: segmentMdCss\n      };\n    }\n  }]);\n  return Segment;\n}(HTMLElement), [33, \"ion-segment\", {\n  \"color\": [513],\n  \"disabled\": [4],\n  \"scrollable\": [4],\n  \"swipeGesture\": [4, \"swipe-gesture\"],\n  \"value\": [1032],\n  \"selectOnFocus\": [4, \"select-on-focus\"],\n  \"activated\": [32]\n}, [[0, \"keydown\", \"onKeyDown\"]], {\n  \"color\": [\"colorChanged\"],\n  \"swipeGesture\": [\"swipeGestureChanged\"],\n  \"value\": [\"valueChanged\"],\n  \"disabled\": [\"disabledChanged\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-segment\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-segment\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Segment);\n        }\n        break;\n    }\n  });\n}\nvar IonSegment = Segment;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonSegment, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","r","raf","i","isRTL","c","createColorClasses","hostContext","b","getIonMode","segmentIosCss","segmentMdCss","Segment","_HTMLElement","_inherits","_super","_createSuper","_this","_classCallCheck","call","__registerHost","__attachShadow","ionChange","_assertThisInitialized","ionSelect","ionStyle","onClick","ev","current","target","previous","checked","tagName","value","emitValueChange","scrollable","swipeGesture","checkButton","setCheckedClasses","getSegmentButton","selector","_a","_b","buttons","getButtons","filter","button","disabled","currIndex","findIndex","document","activeElement","length","activated","color","undefined","selectOnFocus","_createClass","key","colorChanged","oldValue","emitStyle","swipeGestureChanged","gestureChanged","valueChanged","emit","scrollActiveButtonIntoView","disabledChanged","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","gesture","enable","connectedCallback","componentWillLoad","_componentDidLoad","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2","wrap","_callee$","_context","prev","next","sent","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","stop","componentDidLoad","apply","arguments","detail","valueBeforeGesture","activate","setNextIndex","setActivated","event","stopImmediatePropagation","Array","from","querySelectorAll","get","_this3","find","forEach","classList","add","remove","_this4","clicked","getIndicator","root","shadowRoot","querySelector","previousIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","concat","style","setProperty","_this5","index","_iterator2","_step2","activeButton","scrollIntoView","behavior","inline","block","_this6","isEnd","rtl","nextIndex","rect","currentX","previousY","top","height","getRootNode","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","segment","onKeyDown","keyDownSelectsButton","preventDefault","setFocus","render","_createColorClasses","mode","role","class","_defineProperty","ios","md","defineCustomElement$1","customElements","components","define","IonSegment","defineCustomElement"],"sources":["C:/Users/renan/ionic-app/node_modules/@ionic/core/components/ion-segment.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { r as raf } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0;width:auto}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:grid;grid-auto-columns:1fr;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto;grid-auto-columns:minmax(-webkit-min-content, 1fr);grid-auto-columns:minmax(min-content, 1fr)}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent;grid-auto-columns:minmax(auto, 360px)}:host(.in-toolbar){min-height:var(--min-height)}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = /*@__PURE__*/ proxyCustomElement(class Segment extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.onClick = (ev) => {\n      const current = ev.target;\n      const previous = this.checked;\n      // If the current element is a segment then that means\n      // the user tried to swipe to a segment button and\n      // click a segment button at the same time so we should\n      // not update the checked segment button\n      if (current.tagName === 'ION-SEGMENT') {\n        return;\n      }\n      this.value = current.value;\n      if (current !== previous) {\n        this.emitValueChange();\n      }\n      if (this.scrollable || !this.swipeGesture) {\n        if (previous) {\n          this.checkButton(previous, current);\n        }\n        else {\n          this.setCheckedClasses();\n        }\n      }\n    };\n    this.getSegmentButton = (selector) => {\n      var _a, _b;\n      const buttons = this.getButtons().filter((button) => !button.disabled);\n      const currIndex = buttons.findIndex((button) => button === document.activeElement);\n      switch (selector) {\n        case 'first':\n          return buttons[0];\n        case 'last':\n          return buttons[buttons.length - 1];\n        case 'next':\n          return (_a = buttons[currIndex + 1]) !== null && _a !== void 0 ? _a : buttons[0];\n        case 'previous':\n          return (_b = buttons[currIndex - 1]) !== null && _b !== void 0 ? _b : buttons[buttons.length - 1];\n        default:\n          return null;\n      }\n    };\n    this.activated = false;\n    this.color = undefined;\n    this.disabled = false;\n    this.scrollable = false;\n    this.swipeGesture = true;\n    this.value = undefined;\n    this.selectOnFocus = false;\n  }\n  colorChanged(value, oldValue) {\n    /**\n     * If color is set after not having\n     * previously been set (or vice versa),\n     * we need to emit style so the segment-buttons\n     * can apply their color classes properly.\n     */\n    if ((oldValue === undefined && value !== undefined) || (oldValue !== undefined && value === undefined)) {\n      this.emitStyle();\n    }\n  }\n  swipeGestureChanged() {\n    this.gestureChanged();\n  }\n  valueChanged(value) {\n    /**\n     * `ionSelect` is emitted every time the value changes (internal or external changes).\n     * Used by `ion-segment-button` to determine if the button should be checked.\n     */\n    this.ionSelect.emit({ value });\n    this.scrollActiveButtonIntoView();\n  }\n  disabledChanged() {\n    this.gestureChanged();\n    const buttons = this.getButtons();\n    for (const button of buttons) {\n      button.disabled = this.disabled;\n    }\n  }\n  gestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n    }\n  }\n  connectedCallback() {\n    this.emitStyle();\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  async componentDidLoad() {\n    this.setCheckedClasses();\n    /**\n     * We need to wait for the buttons to all be rendered\n     * before we can scroll.\n     */\n    raf(() => {\n      this.scrollActiveButtonIntoView();\n    });\n    this.gesture = (await import('./index3.js')).createGesture({\n      el: this.el,\n      gestureName: 'segment',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: (ev) => this.onStart(ev),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.gestureChanged();\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n  }\n  onStart(detail) {\n    this.valueBeforeGesture = this.value;\n    this.activate(detail);\n  }\n  onMove(detail) {\n    this.setNextIndex(detail);\n  }\n  onEnd(detail) {\n    this.setActivated(false);\n    this.setNextIndex(detail, true);\n    detail.event.stopImmediatePropagation();\n    const value = this.value;\n    if (value !== undefined) {\n      if (this.valueBeforeGesture !== value) {\n        this.emitValueChange();\n      }\n    }\n    this.valueBeforeGesture = undefined;\n  }\n  /**\n   * Emits an `ionChange` event.\n   *\n   * This API should be called for user committed changes.\n   * This API should not be used for external value changes.\n   */\n  emitValueChange() {\n    const { value } = this;\n    this.ionChange.emit({ value });\n  }\n  getButtons() {\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\n  }\n  get checked() {\n    return this.getButtons().find((button) => button.value === this.value);\n  }\n  /*\n   * Activate both the segment and the buttons\n   * due to a bug with ::slotted in Safari\n   */\n  setActivated(activated) {\n    const buttons = this.getButtons();\n    buttons.forEach((button) => {\n      if (activated) {\n        button.classList.add('segment-button-activated');\n      }\n      else {\n        button.classList.remove('segment-button-activated');\n      }\n    });\n    this.activated = activated;\n  }\n  activate(detail) {\n    const clicked = detail.event.target;\n    const buttons = this.getButtons();\n    const checked = buttons.find((button) => button.value === this.value);\n    // Make sure we are only checking for activation on a segment button\n    // since disabled buttons will get the click on the segment\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n      return;\n    }\n    // If there are no checked buttons, set the current button to checked\n    if (!checked) {\n      this.value = clicked.value;\n      this.setCheckedClasses();\n    }\n    // If the gesture began on the clicked button with the indicator\n    // then we should activate the indicator\n    if (this.value === clicked.value) {\n      this.setActivated(true);\n    }\n  }\n  getIndicator(button) {\n    const root = button.shadowRoot || button;\n    return root.querySelector('.segment-button-indicator');\n  }\n  checkButton(previous, current) {\n    const previousIndicator = this.getIndicator(previous);\n    const currentIndicator = this.getIndicator(current);\n    if (previousIndicator === null || currentIndicator === null) {\n      return;\n    }\n    const previousClientRect = previousIndicator.getBoundingClientRect();\n    const currentClientRect = currentIndicator.getBoundingClientRect();\n    const widthDelta = previousClientRect.width / currentClientRect.width;\n    const xPosition = previousClientRect.left - currentClientRect.left;\n    // Scale the indicator width to match the previous indicator width\n    // and translate it on top of the previous indicator\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n    writeTask(() => {\n      // Remove the transition before positioning on top of the previous indicator\n      currentIndicator.classList.remove('segment-button-indicator-animated');\n      currentIndicator.style.setProperty('transform', transform);\n      // Force a repaint to ensure the transform happens\n      currentIndicator.getBoundingClientRect();\n      // Add the transition to move the indicator into place\n      currentIndicator.classList.add('segment-button-indicator-animated');\n      // Remove the transform to slide the indicator back to the button clicked\n      currentIndicator.style.setProperty('transform', '');\n    });\n    this.value = current.value;\n    this.setCheckedClasses();\n  }\n  setCheckedClasses() {\n    const buttons = this.getButtons();\n    const index = buttons.findIndex((button) => button.value === this.value);\n    const next = index + 1;\n    for (const button of buttons) {\n      button.classList.remove('segment-button-after-checked');\n    }\n    if (next < buttons.length) {\n      buttons[next].classList.add('segment-button-after-checked');\n    }\n  }\n  scrollActiveButtonIntoView() {\n    const { scrollable, value } = this;\n    if (scrollable) {\n      const buttons = this.getButtons();\n      const activeButton = buttons.find((button) => button.value === value);\n      if (activeButton !== undefined) {\n        /**\n         * Scrollable segment buttons should be\n         * centered within the view including\n         * buttons that are partially offscreen.\n         */\n        activeButton.scrollIntoView({\n          behavior: 'smooth',\n          inline: 'center',\n          /**\n           * Segment should scroll on the\n           * horizontal axis. `block: 'nearest'`\n           * ensures that the vertical axis\n           * does not scroll if the segment\n           * as a whole is already in view.\n           */\n          block: 'nearest',\n        });\n      }\n    }\n  }\n  setNextIndex(detail, isEnd = false) {\n    const rtl = isRTL(this.el);\n    const activated = this.activated;\n    const buttons = this.getButtons();\n    const index = buttons.findIndex((button) => button.value === this.value);\n    const previous = buttons[index];\n    let current;\n    let nextIndex;\n    if (index === -1) {\n      return;\n    }\n    // Get the element that the touch event started on in case\n    // it was the checked button, then we will move the indicator\n    const rect = previous.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    // Get the element that the gesture is on top of based on the currentX of the\n    // gesture event and the Y coordinate of the starting element, since the gesture\n    // can move up and down off of the segment\n    const currentX = detail.currentX;\n    const previousY = rect.top + rect.height / 2;\n    /**\n     * Segment can be used inside the shadow dom\n     * so doing document.elementFromPoint would never\n     * return a segment button in that instance.\n     * We use getRootNode to which will return the parent\n     * shadow root if used inside a shadow component and\n     * returns document otherwise.\n     */\n    const root = this.el.getRootNode();\n    const nextEl = root.elementFromPoint(currentX, previousY);\n    const decreaseIndex = rtl ? currentX > left + width : currentX < left;\n    const increaseIndex = rtl ? currentX < left : currentX > left + width;\n    // If the indicator is currently activated then we have started the gesture\n    // on top of the checked button so we need to slide the indicator\n    // by checking the button next to it as we move\n    if (activated && !isEnd) {\n      // Decrease index, move left in LTR & right in RTL\n      if (decreaseIndex) {\n        const newIndex = index - 1;\n        if (newIndex >= 0) {\n          nextIndex = newIndex;\n        }\n        // Increase index, moves right in LTR & left in RTL\n      }\n      else if (increaseIndex) {\n        if (activated && !isEnd) {\n          const newIndex = index + 1;\n          if (newIndex < buttons.length) {\n            nextIndex = newIndex;\n          }\n        }\n      }\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n        current = buttons[nextIndex];\n      }\n    }\n    // If the indicator is not activated then we will just set the indicator\n    // to the element where the gesture ended\n    if (!activated && isEnd) {\n      current = nextEl;\n    }\n    if (current != null) {\n      /**\n       * If current element is ion-segment then that means\n       * user tried to select a disabled ion-segment-button,\n       * and we should not update the ripple.\n       */\n      if (current.tagName === 'ION-SEGMENT') {\n        return false;\n      }\n      if (previous !== current) {\n        this.checkButton(previous, current);\n      }\n    }\n    return true;\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      segment: true,\n    });\n  }\n  onKeyDown(ev) {\n    const rtl = isRTL(this.el);\n    let keyDownSelectsButton = this.selectOnFocus;\n    let current;\n    switch (ev.key) {\n      case 'ArrowRight':\n        ev.preventDefault();\n        current = rtl ? this.getSegmentButton('previous') : this.getSegmentButton('next');\n        break;\n      case 'ArrowLeft':\n        ev.preventDefault();\n        current = rtl ? this.getSegmentButton('next') : this.getSegmentButton('previous');\n        break;\n      case 'Home':\n        ev.preventDefault();\n        current = this.getSegmentButton('first');\n        break;\n      case 'End':\n        ev.preventDefault();\n        current = this.getSegmentButton('last');\n        break;\n      case ' ':\n      case 'Enter':\n        ev.preventDefault();\n        current = document.activeElement;\n        keyDownSelectsButton = true;\n    }\n    if (!current) {\n      return;\n    }\n    if (keyDownSelectsButton) {\n      const previous = this.checked;\n      this.checkButton(previous || current, current);\n      if (current !== previous) {\n        this.emitValueChange();\n      }\n    }\n    current.setFocus();\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'segment-activated': this.activated,\n        'segment-disabled': this.disabled,\n        'segment-scrollable': this.scrollable,\n      }) }, h(\"slot\", null)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"color\": [\"colorChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: segmentIosCss,\n    md: segmentMdCss\n  }; }\n}, [33, \"ion-segment\", {\n    \"color\": [513],\n    \"disabled\": [4],\n    \"scrollable\": [4],\n    \"swipeGesture\": [4, \"swipe-gesture\"],\n    \"value\": [1032],\n    \"selectOnFocus\": [4, \"select-on-focus\"],\n    \"activated\": [32]\n  }, [[0, \"keydown\", \"onKeyDown\"]], {\n    \"color\": [\"colorChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-segment\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-segment\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Segment);\n      }\n      break;\n  } });\n}\n\nconst IonSegment = Segment;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonSegment, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}