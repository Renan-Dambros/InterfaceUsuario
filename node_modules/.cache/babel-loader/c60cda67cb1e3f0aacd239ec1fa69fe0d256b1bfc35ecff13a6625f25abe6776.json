{"ast":null,"code":"import _defineProperty from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nimport { i as isStr, b as inheritAttributes, g as getUrl, c as getName, d as isRTL } from './utils.js';\nvar validateContent = function validateContent(svgContent) {\n  var div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (var i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  var svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    var svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nvar isValid = function isValid(elm) {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (var i = 0; i < elm.attributes.length; i++) {\n      var name = elm.attributes[i].name;\n      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (var _i = 0; _i < elm.childNodes.length; _i++) {\n      if (!isValid(elm.childNodes[_i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nvar isSvgDataUrl = function isSvgDataUrl(url) {\n  return url.startsWith('data:image/svg+xml');\n};\nvar isEncodedDataUrl = function isEncodedDataUrl(url) {\n  return url.indexOf(';utf8,') !== -1;\n};\nvar ioniconContent = new Map();\nvar requests = new Map();\nvar parser;\nvar getSvgContent = function getSvgContent(url, sanitize) {\n  // see if we already have a request for this url\n  var req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      /**\n       * If the url is a data url of an svg, then try to parse it\n       * with the DOMParser. This works with content security policies enabled.\n       */\n      if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n        if (!parser) {\n          /**\n           * Create an instance of the DOM parser. This creates a single\n           * parser instance for the entire app, which is more efficient.\n           */\n          parser = new DOMParser();\n        }\n        var doc = parser.parseFromString(url, 'text/html');\n        var svg = doc.querySelector('svg');\n        if (svg) {\n          ioniconContent.set(url, svg.outerHTML);\n        }\n        return Promise.resolve();\n      } else {\n        // we don't already have a request\n        req = fetch(url).then(function (rsp) {\n          if (rsp.ok) {\n            return rsp.text().then(function (svgContent) {\n              if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n              }\n              ioniconContent.set(url, svgContent || '');\n            });\n          }\n          ioniconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n      }\n    } else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\nvar iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}@supports (background: -webkit-named-image(i)){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}@supports not selector(:dir(rtl)) and selector(:host-context([dir='rtl'])){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}:host(.flip-rtl):host-context([dir='rtl']) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}@supports selector(:dir(rtl)){:host(.flip-rtl:dir(rtl)) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.flip-rtl:dir(ltr)) .icon-inner{-webkit-transform:scaleX(1);transform:scaleX(1)}}:host(.icon-small){font-size:1.125rem !important}:host(.icon-large){font-size:2rem !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\nvar Icon = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(Icon, _HTMLElement);\n  var _super = _createSuper(Icon);\n  function Icon() {\n    var _this;\n    _classCallCheck(this, Icon);\n    _this = _super.call(this);\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.iconName = null;\n    _this.inheritedAttributes = {};\n    _this.didLoadIcon = false;\n    _this.svgContent = undefined;\n    _this.isVisible = false;\n    _this.mode = getIonMode();\n    _this.color = undefined;\n    _this.ios = undefined;\n    _this.md = undefined;\n    _this.flipRtl = undefined;\n    _this.name = undefined;\n    _this.src = undefined;\n    _this.icon = undefined;\n    _this.size = undefined;\n    _this.lazy = false;\n    _this.sanitize = true;\n    return _this;\n  }\n  _createClass(Icon, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _this2 = this;\n      // purposely do not return the promise here because loading\n      // the svg file should not hold up loading the app\n      // only load the svg if it's visible\n      this.waitUntilVisible(this.el, '50px', function () {\n        _this2.isVisible = true;\n        _this2.loadIcon();\n      });\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      /**\n       * Addresses an Angular issue where property values are assigned after the 'connectedCallback' but prior to the registration of watchers.\n       * This enhancement ensures the loading of an icon when the component has finished rendering and the icon has yet to apply the SVG data.\n       * This modification pertains to the usage of Angular's binding syntax:\n       * `<ion-icon [name]=\"myIconName\"></ion-icon>`\n       */\n      if (!this.didLoadIcon) {\n        this.loadIcon();\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.io) {\n        this.io.disconnect();\n        this.io = undefined;\n      }\n    }\n  }, {\n    key: \"waitUntilVisible\",\n    value: function waitUntilVisible(el, rootMargin, cb) {\n      var _this3 = this;\n      if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n        var io = this.io = new window.IntersectionObserver(function (data) {\n          if (data[0].isIntersecting) {\n            io.disconnect();\n            _this3.io = undefined;\n            cb();\n          }\n        }, {\n          rootMargin: rootMargin\n        });\n        io.observe(el);\n      } else {\n        // browser doesn't support IntersectionObserver\n        // so just fallback to always show it\n        cb();\n      }\n    }\n  }, {\n    key: \"loadIcon\",\n    value: function loadIcon() {\n      var _this4 = this;\n      if (Build.isBrowser && this.isVisible) {\n        var url = getUrl(this);\n        if (url) {\n          if (ioniconContent.has(url)) {\n            // sync if it's already loaded\n            this.svgContent = ioniconContent.get(url);\n          } else {\n            // async if it hasn't been loaded\n            getSvgContent(url, this.sanitize).then(function () {\n              return _this4.svgContent = ioniconContent.get(url);\n            });\n          }\n          this.didLoadIcon = true;\n        }\n      }\n      this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _Object$assign2;\n      var flipRtl = this.flipRtl,\n        iconName = this.iconName,\n        inheritedAttributes = this.inheritedAttributes,\n        el = this.el;\n      var mode = this.mode || 'md';\n      // we have designated that arrows & chevrons should automatically flip (unless flip-rtl is set to false) because \"back\" is left in ltr and right in rtl, and \"forward\" is the opposite\n      var shouldAutoFlip = iconName ? (iconName.includes('arrow') || iconName.includes('chevron')) && flipRtl !== false : false;\n      // if shouldBeFlippable is true, the icon should change direction when `dir` changes\n      var shouldBeFlippable = flipRtl || shouldAutoFlip;\n      return h(Host, Object.assign({\n        role: \"img\",\n        class: Object.assign(Object.assign(_defineProperty({}, mode, true), createColorClasses(this.color)), (_Object$assign2 = {}, _defineProperty(_Object$assign2, \"icon-\".concat(this.size), !!this.size), _defineProperty(_Object$assign2, 'flip-rtl', shouldBeFlippable), _defineProperty(_Object$assign2, 'icon-rtl', shouldBeFlippable && isRTL(el)), _Object$assign2))\n      }, inheritedAttributes), Build.isBrowser && this.svgContent ? h(\"div\", {\n        class: \"icon-inner\",\n        innerHTML: this.svgContent\n      }) : h(\"div\", {\n        class: \"icon-inner\"\n      }));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"assetsDirs\",\n    get: function get() {\n      return [\"svg\"];\n    }\n  }, {\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"name\": [\"loadIcon\"],\n        \"src\": [\"loadIcon\"],\n        \"icon\": [\"loadIcon\"],\n        \"ios\": [\"loadIcon\"],\n        \"md\": [\"loadIcon\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return iconCss;\n    }\n  }]);\n  return Icon;\n}(HTMLElement), [1, \"ion-icon\", {\n  \"mode\": [1025],\n  \"color\": [1],\n  \"ios\": [1],\n  \"md\": [1],\n  \"flipRtl\": [4, \"flip-rtl\"],\n  \"name\": [513],\n  \"src\": [1],\n  \"icon\": [8],\n  \"size\": [1],\n  \"lazy\": [4],\n  \"sanitize\": [4],\n  \"svgContent\": [32],\n  \"isVisible\": [32]\n}]);\nvar getIonMode = function getIonMode() {\n  return Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode') || 'md';\n};\nvar createColorClasses = function createColorClasses(color) {\n  return color ? _defineProperty({\n    'ion-color': true\n  }, \"ion-color-\".concat(color), true) : null;\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-icon\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Icon);\n        }\n        break;\n    }\n  });\n}\nvar IonIcon = Icon;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonIcon, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","Build","h","Host","i","isStr","b","inheritAttributes","g","getUrl","c","getName","d","isRTL","validateContent","svgContent","div","document","createElement","innerHTML","childNodes","length","nodeName","toLowerCase","removeChild","svgElm","firstElementChild","svgClass","getAttribute","setAttribute","trim","isValid","elm","nodeType","attributes","name","indexOf","isSvgDataUrl","url","startsWith","isEncodedDataUrl","ioniconContent","Map","requests","parser","getSvgContent","sanitize","req","get","fetch","DOMParser","doc","parseFromString","svg","querySelector","set","outerHTML","Promise","resolve","then","rsp","ok","text","iconCss","Icon","_HTMLElement","_inherits","_super","_createSuper","_this","_classCallCheck","call","__registerHost","__attachShadow","iconName","inheritedAttributes","didLoadIcon","undefined","isVisible","mode","getIonMode","color","ios","md","flipRtl","src","icon","size","lazy","_createClass","key","value","componentWillLoad","el","connectedCallback","_this2","waitUntilVisible","loadIcon","componentDidLoad","disconnectedCallback","io","disconnect","rootMargin","cb","_this3","isBrowser","window","IntersectionObserver","data","isIntersecting","observe","_this4","has","render","_Object$assign2","shouldAutoFlip","includes","shouldBeFlippable","Object","assign","role","class","_defineProperty","createColorClasses","concat","documentElement","defineCustomElement$1","customElements","components","forEach","tagName","define","IonIcon","defineCustomElement"],"sources":["C:/Users/renan/ionic-app/node_modules/ionicons/components/ion-icon.js"],"sourcesContent":["import { proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nimport { i as isStr, b as inheritAttributes, g as getUrl, c as getName, d as isRTL } from './utils.js';\n\nconst validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nconst isValid = (elm) => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const name = elm.attributes[i].name;\n      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nconst isSvgDataUrl = (url) => url.startsWith('data:image/svg+xml');\nconst isEncodedDataUrl = (url) => url.indexOf(';utf8,') !== -1;\n\nconst ioniconContent = new Map();\nconst requests = new Map();\nlet parser;\nconst getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      /**\n       * If the url is a data url of an svg, then try to parse it\n       * with the DOMParser. This works with content security policies enabled.\n       */\n      if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n        if (!parser) {\n          /**\n           * Create an instance of the DOM parser. This creates a single\n           * parser instance for the entire app, which is more efficient.\n           */\n          parser = new DOMParser();\n        }\n        const doc = parser.parseFromString(url, 'text/html');\n        const svg = doc.querySelector('svg');\n        if (svg) {\n          ioniconContent.set(url, svg.outerHTML);\n        }\n        return Promise.resolve();\n      }\n      else {\n        // we don't already have a request\n        req = fetch(url).then((rsp) => {\n          if (rsp.ok) {\n            return rsp.text().then((svgContent) => {\n              if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n              }\n              ioniconContent.set(url, svgContent || '');\n            });\n          }\n          ioniconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n      }\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}@supports (background: -webkit-named-image(i)){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}@supports not selector(:dir(rtl)) and selector(:host-context([dir='rtl'])){:host(.icon-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}}:host(.flip-rtl):host-context([dir='rtl']) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}@supports selector(:dir(rtl)){:host(.flip-rtl:dir(rtl)) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.flip-rtl:dir(ltr)) .icon-inner{-webkit-transform:scaleX(1);transform:scaleX(1)}}:host(.icon-small){font-size:1.125rem !important}:host(.icon-large){font-size:2rem !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\n\nconst Icon = /*@__PURE__*/ proxyCustomElement(class Icon extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.didLoadIcon = false;\n    this.svgContent = undefined;\n    this.isVisible = false;\n    this.mode = getIonMode();\n    this.color = undefined;\n    this.ios = undefined;\n    this.md = undefined;\n    this.flipRtl = undefined;\n    this.name = undefined;\n    this.src = undefined;\n    this.icon = undefined;\n    this.size = undefined;\n    this.lazy = false;\n    this.sanitize = true;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  componentDidLoad() {\n    /**\n     * Addresses an Angular issue where property values are assigned after the 'connectedCallback' but prior to the registration of watchers.\n     * This enhancement ensures the loading of an icon when the component has finished rendering and the icon has yet to apply the SVG data.\n     * This modification pertains to the usage of Angular's binding syntax:\n     * `<ion-icon [name]=\"myIconName\"></ion-icon>`\n     */\n    if (!this.didLoadIcon) {\n      this.loadIcon();\n    }\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        }\n        else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n        }\n        this.didLoadIcon = true;\n      }\n    }\n    this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n  }\n  render() {\n    const { flipRtl, iconName, inheritedAttributes, el } = this;\n    const mode = this.mode || 'md';\n    // we have designated that arrows & chevrons should automatically flip (unless flip-rtl is set to false) because \"back\" is left in ltr and right in rtl, and \"forward\" is the opposite\n    const shouldAutoFlip = iconName\n      ? (iconName.includes('arrow') || iconName.includes('chevron')) && flipRtl !== false\n      : false;\n    // if shouldBeFlippable is true, the icon should change direction when `dir` changes\n    const shouldBeFlippable = flipRtl || shouldAutoFlip;\n    return (h(Host, Object.assign({ role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': shouldBeFlippable, 'icon-rtl': shouldBeFlippable && isRTL(el) }) }, inheritedAttributes), Build.isBrowser && this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n  }\n  static get assetsDirs() { return [\"svg\"]; }\n  get el() { return this; }\n  static get watchers() { return {\n    \"name\": [\"loadIcon\"],\n    \"src\": [\"loadIcon\"],\n    \"icon\": [\"loadIcon\"],\n    \"ios\": [\"loadIcon\"],\n    \"md\": [\"loadIcon\"]\n  }; }\n  static get style() { return iconCss; }\n}, [1, \"ion-icon\", {\n    \"mode\": [1025],\n    \"color\": [1],\n    \"ios\": [1],\n    \"md\": [1],\n    \"flipRtl\": [4, \"flip-rtl\"],\n    \"name\": [513],\n    \"src\": [1],\n    \"icon\": [8],\n    \"size\": [1],\n    \"lazy\": [4],\n    \"sanitize\": [4],\n    \"svgContent\": [32],\n    \"isVisible\": [32]\n  }]);\nconst getIonMode = () => (Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n  return color\n    ? {\n      'ion-color': true,\n      [`ion-color-${color}`]: true,\n    }\n    : null;\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Icon);\n      }\n      break;\n  } });\n}\n\nconst IonIcon = Icon;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonIcon, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}