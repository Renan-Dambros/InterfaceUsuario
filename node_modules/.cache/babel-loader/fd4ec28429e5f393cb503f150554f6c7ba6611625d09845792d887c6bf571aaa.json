{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Creates a lock controller.\n *\n * Claiming a lock means that nothing else can acquire the lock until it is released.\n * This can momentarily prevent execution of code that needs to wait for the earlier code to finish.\n * For example, this can be used to prevent multiple transitions from occurring at the same time.\n */\nvar createLockController = function createLockController() {\n  var waitPromise;\n  /**\n   * When lock() is called, the lock is claimed.\n   * Once a lock has been claimed, it cannot be claimed again until it is released.\n   * When this function gets resolved, the lock is released, allowing it to be claimed again.\n   *\n   * @example ```tsx\n   * const unlock = await this.lockController.lock();\n   * // do other stuff\n   * unlock();\n   * ```\n   */\n  var lock = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var p, resolve;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            p = waitPromise;\n            waitPromise = new Promise(function (r) {\n              return resolve = r;\n            });\n            if (!(p !== undefined)) {\n              _context.next = 5;\n              break;\n            }\n            _context.next = 5;\n            return p;\n          case 5:\n            return _context.abrupt(\"return\", resolve);\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function lock() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return {\n    lock: lock\n  };\n};\nexport { createLockController as c };","map":{"version":3,"names":["createLockController","waitPromise","lock","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","p","resolve","wrap","_callee$","_context","prev","next","Promise","r","undefined","abrupt","stop","apply","arguments","c"],"sources":["C:/Users/renan/ionic-app/node_modules/@ionic/core/components/lock-controller.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Creates a lock controller.\n *\n * Claiming a lock means that nothing else can acquire the lock until it is released.\n * This can momentarily prevent execution of code that needs to wait for the earlier code to finish.\n * For example, this can be used to prevent multiple transitions from occurring at the same time.\n */\nconst createLockController = () => {\n  let waitPromise;\n  /**\n   * When lock() is called, the lock is claimed.\n   * Once a lock has been claimed, it cannot be claimed again until it is released.\n   * When this function gets resolved, the lock is released, allowing it to be claimed again.\n   *\n   * @example ```tsx\n   * const unlock = await this.lockController.lock();\n   * // do other stuff\n   * unlock();\n   * ```\n   */\n  const lock = async () => {\n    const p = waitPromise;\n    let resolve;\n    waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  };\n  return {\n    lock,\n  };\n};\n\nexport { createLockController as c };\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAIC,WAAW;EACf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,IAAMC,IAAI;IAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;MAAA,IAAAC,CAAA,EAAAC,OAAA;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACLN,CAAC,GAAGP,WAAW;YAErBA,WAAW,GAAG,IAAIc,OAAO,CAAC,UAACC,CAAC;cAAA,OAAMP,OAAO,GAAGO,CAAC;YAAA,CAAC,CAAC;YAAC,MAC5CR,CAAC,KAAKS,SAAS;cAAAL,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACXN,CAAC;UAAA;YAAA,OAAAI,QAAA,CAAAM,MAAA,WAEFT,OAAO;UAAA;UAAA;YAAA,OAAAG,QAAA,CAAAO,IAAA;QAAA;MAAA,GAAAZ,OAAA;IAAA,CACf;IAAA,gBARKL,IAAIA,CAAA;MAAA,OAAAC,IAAA,CAAAiB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQT;EACD,OAAO;IACLnB,IAAI,EAAJA;EACF,CAAC;AACH,CAAC;AAED,SAASF,oBAAoB,IAAIsB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}