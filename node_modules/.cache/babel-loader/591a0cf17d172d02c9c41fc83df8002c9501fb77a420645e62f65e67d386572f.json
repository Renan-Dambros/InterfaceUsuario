{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { a as printIonError, p as printIonWarning } from './index6.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, p as parseMinParts, o as parseMaxParts, q as parseDate, w as warnIfValueOutOfBounds, r as convertToArrayOfNumbers, s as convertDataToISO, t as getToday, u as getClosestValidDate, x as getNumDaysInMonth, y as getCombinedDateColumnData, z as getMonthColumnData, A as getDayColumnData, B as getYearColumnData, C as isMonthFirstLocale, D as getTimeColumnsData, E as isLocaleDayPeriodRTL, F as getMonthAndYear, G as getDaysOfWeek, H as getDaysOfMonth, I as generateMonths, J as getHourCycle, K as getLocalizedTime, L as getMonthAndDay, M as formatValue, N as getNextYear, O as getPreviousYear, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find(parts => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, {\n  minParts,\n  maxParts\n}) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if (minParts && isBefore(refParts, minParts) || maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(nextMonth, {\n    maxParts\n  });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n  if (Array.isArray(highlightedDates)) {\n    const dateStringWithoutTime = dateIsoString.split('T')[0];\n    const matchingHighlight = highlightedDates.find(hd => hd.date === dateStringWithoutTime);\n    if (matchingHighlight) {\n      return {\n        textColor: matchingHighlight.textColor,\n        backgroundColor: matchingHighlight.backgroundColor\n      };\n    }\n  } else {\n    /**\n     * Wrap in a try-catch to prevent exceptions in the user's function\n     * from interrupting the calendar's rendering.\n     */\n    try {\n      return highlightedDates(dateIsoString);\n    } catch (e) {\n      printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n    }\n  }\n  return undefined;\n};\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year) .calendar-next-prev:dir(rtl),:host(.show-month-and-year) .calendar-days-of-week:dir(rtl),:host(.show-month-and-year) .calendar-body:dir(rtl),:host(.show-month-and-year) .datetime-time:dir(rtl){left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:min(1rem, 25.6px);font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year) .calendar-next-prev:dir(rtl),:host(.show-month-and-year) .calendar-days-of-week:dir(rtl),:host(.show-month-and-year) .calendar-body:dir(rtl),:host(.show-month-and-year) .datetime-time:dir(rtl){left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\nconst Datetime = /*@__PURE__*/proxyCustomElement(class Datetime extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    this.warnIfIncorrectValueUsage = () => {\n      const {\n        multiple,\n        value\n      } = this;\n      if (!multiple && Array.isArray(value)) {\n        /**\n         * We do some processing on the `value` array so\n         * that it looks more like an array when logged to\n         * the console.\n         * Example given ['a', 'b']\n         * Default toString() behavior: a,b\n         * Custom behavior: ['a', 'b']\n         */\n        printIonWarning(`ion-datetime was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map(v => `'${v}'`).join(', ')}]\n`, this.el);\n      }\n    };\n    this.setValue = value => {\n      this.value = value;\n      this.ionChange.emit({\n        value\n      });\n    };\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date and then\n     * falling back to defaultParts if no active date\n     * is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const {\n        defaultParts\n      } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const {\n        activeParts\n      } = this;\n      return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n    };\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = parts => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      const {\n        multiple,\n        minParts,\n        maxParts,\n        activeParts\n      } = this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      this.setWorkingParts(validatedParts);\n      if (multiple) {\n        const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter(p => !isSameDay(p, validatedParts));\n        } else {\n          this.activeParts = [...activePartsArray, validatedParts];\n        }\n      } else {\n        this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = ev => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, {\n        attributeFilter: ['class'],\n        attributeOldValue: true\n      });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', ev => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = currentMonth => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calendar-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const {\n        day\n      } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${padding.length + day}) .calendar-day`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const {\n        min,\n        defaultParts\n      } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const {\n        max,\n        defaultParts\n      } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = parts => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          /**\n           * If the current scroll position is all the way to the left\n           * then we have scrolled to the previous month.\n           * Otherwise, assume that we have scrolled to the next\n           * month. We have a tolerance of 2px to account for\n           * sub pixel rendering.\n           *\n           * Check below the next line ensures that we did not\n           * swipe and abort (i.e. we swiped but we are still on the current month).\n           */\n          const month = calendarBodyRef.scrollLeft <= 2 ? startMonth : endMonth;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2) return;\n          /**\n           * If we're force-rendering a month, assume we've\n           * scrolled to that and return it.\n           *\n           * If forceRenderDate is ever used in a context where the\n           * forced month is not immediately auto-scrolled to, this\n           * should be updated to also check whether `month` has the\n           * same month and year as the forced date.\n           */\n          const {\n            forceRenderDate\n          } = this;\n          if (forceRenderDate !== undefined) {\n            return {\n              month: forceRenderDate.month,\n              year: forceRenderDate.year,\n              day: forceRenderDate.day\n            };\n          }\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          } else if (month === endMonth) {\n            return getNextMonth(parts);\n          } else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate) return;\n          const {\n            month,\n            day,\n            year\n          } = newDate;\n          if (isMonthDisabled({\n            month,\n            year,\n            day: null\n          }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), {\n              day: null\n            }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), {\n              day: null\n            })\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n              month,\n              day: day,\n              year\n            }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n            if (this.resolveForceDateScrolling) {\n              this.resolveForceDateScrolling();\n            }\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const {\n        destroyCalendarListener,\n        destroyKeyboardMO\n      } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = value => {\n      const hasValue = value !== null && value !== undefined && (!Array.isArray(value) || value.length > 0);\n      const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const {\n        minParts,\n        maxParts,\n        workingParts,\n        el\n      } = this;\n      this.warnIfIncorrectValueUsage();\n      /**\n       * Return early if the value wasn't parsed correctly, such as\n       * if an improperly formatted date string was provided.\n       */\n      if (!valueToProcess) {\n        return;\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const targetValue = clampDate(singleValue, minParts, maxParts);\n      const {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      } = targetValue;\n      const ampm = parseAmPm(hour);\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        } else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm\n          };\n        }\n      } else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n      /**\n       * Only animate if:\n       * 1. We're using grid style (wheel style pickers should just jump to new value)\n       * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n       * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n       * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n       */\n      const didChangeMonth = month !== undefined && month !== workingParts.month || year !== undefined && year !== workingParts.year;\n      const bodyIsVisible = el.classList.contains('datetime-ready');\n      const {\n        isGridStyle,\n        showMonthAndYear\n      } = this;\n      if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n        this.animateToDate(targetValue);\n      } else {\n        /**\n         * We only need to do this if we didn't just animate to a new month,\n         * since that calls prevMonth/nextMonth which calls setWorkingParts for us.\n         */\n        this.setWorkingParts({\n          month,\n          day,\n          year,\n          hour,\n          minute,\n          ampm\n        });\n      }\n    };\n    this.animateToDate = async targetValue => {\n      const {\n        workingParts\n      } = this;\n      /**\n       * Tell other render functions that we need to force the\n       * target month to appear in place of the actual next/prev month.\n       * Because this is a State variable, a rerender will be triggered\n       * automatically, updating the rendered months.\n       */\n      this.forceRenderDate = targetValue;\n      /**\n       * Flag that we've started scrolling to the forced date.\n       * The resolve function will be called by the datetime's\n       * scroll listener when it's done updating everything.\n       * This is a replacement for making prev/nextMonth async,\n       * since the logic we're waiting on is in a listener.\n       */\n      const forceDateScrollingPromise = new Promise(resolve => {\n        this.resolveForceDateScrolling = resolve;\n      });\n      /**\n       * Animate smoothly to the forced month. This will also update\n       * workingParts and correct the surrounding months for us.\n       */\n      const targetMonthIsBefore = isBefore(targetValue, workingParts);\n      targetMonthIsBefore ? this.prevMonth() : this.nextMonth();\n      await forceDateScrollingPromise;\n      this.resolveForceDateScrolling = undefined;\n      this.forceRenderDate = undefined;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null;\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth'\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.isTimePopoverOpen = false;\n    this.forceRenderDate = undefined;\n    this.color = 'primary';\n    this.name = this.inputId;\n    this.disabled = false;\n    this.readonly = false;\n    this.isDateEnabled = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.presentation = 'date-time';\n    this.cancelText = 'Cancel';\n    this.doneText = 'Done';\n    this.clearText = 'Clear';\n    this.yearValues = undefined;\n    this.monthValues = undefined;\n    this.dayValues = undefined;\n    this.hourValues = undefined;\n    this.minuteValues = undefined;\n    this.locale = 'default';\n    this.firstDayOfWeek = 0;\n    this.titleSelectedDatesFormatter = undefined;\n    this.multiple = false;\n    this.highlightedDates = undefined;\n    this.value = undefined;\n    this.showDefaultTitle = false;\n    this.showDefaultButtons = false;\n    this.showClearButton = false;\n    this.showDefaultTimeLabel = true;\n    this.hourCycle = undefined;\n    this.size = 'fixed';\n    this.preferWheel = false;\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  get isGridStyle() {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    return hasDatePresentation && !preferWheel;\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  async valueChanged() {\n    const {\n      value\n    } = this;\n    if (this.hasValue()) {\n      this.processValue(value);\n    }\n    this.emitStyle();\n    this.ionValueChange.emit({\n      value\n    });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    const {\n      isCalendarPicker,\n      activeParts\n    } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker.\n     */\n    if (activeParts !== undefined || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.setValue(undefined);\n      } else {\n        this.setValue(convertDataToISO(activeParts));\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const {\n      presentation\n    } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = entries => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, {\n      threshold: 0.01\n    });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = entries => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, {\n      threshold: 0\n    });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', ev => ev.stopPropagation());\n    root.addEventListener('ionBlur', ev => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const {\n      presentation,\n      prevPresentation,\n      calendarBodyRef,\n      minParts,\n      preferWheel\n    } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      if (workingMonth) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const {\n      el,\n      highlightedDates,\n      multiple,\n      presentation,\n      preferWheel\n    } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    if (highlightedDates !== undefined) {\n      if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n        printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n      }\n      if (preferWheel) {\n        printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    const hourValues = this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    const minuteValues = this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    const monthValues = this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    const yearValues = this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    const dayValues = this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    const todayParts = this.todayParts = parseDate(getToday());\n    this.defaultParts = getClosestValidDate(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);\n    this.processMinParts();\n    this.processMaxParts();\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const {\n      showDefaultButtons,\n      showClearButton\n    } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.setValue(undefined);\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return h(\"div\", {\n      class: \"datetime-footer\"\n    }, h(\"div\", {\n      class: \"datetime-buttons\"\n    }, h(\"div\", {\n      class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton\n      }\n    }, h(\"slot\", {\n      name: \"buttons\"\n    }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", {\n      id: \"cancel-button\",\n      color: this.color,\n      onClick: () => this.cancel(true)\n    }, this.cancelText), h(\"div\", {\n      class: \"datetime-action-buttons-container\"\n    }, showClearButton && h(\"ion-button\", {\n      id: \"clear-button\",\n      color: this.color,\n      onClick: () => clearButtonClick()\n    }, this.clearText), showDefaultButtons && h(\"ion-button\", {\n      id: \"confirm-button\",\n      color: this.color,\n      onClick: () => this.confirm(true)\n    }, this.doneText)))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const {\n      defaultParts,\n      workingParts,\n      locale,\n      minParts,\n      maxParts,\n      todayParts,\n      isDateEnabled\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), {\n          disabled\n        });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null ? `${workingParts.year}-${workingParts.month}-${workingParts.day}` : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return h(\"ion-picker-column-internal\", {\n      class: \"date-column\",\n      color: this.color,\n      items: items,\n      value: todayString,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const {\n          value\n        } = ev.detail;\n        const findPart = parts.find(({\n          month,\n          day,\n          year\n        }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const {\n      workingParts,\n      isDateEnabled\n    } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];\n    if (isDateEnabled) {\n      days = days.map(dayObject => {\n        const {\n          value\n        } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), {\n          disabled\n        });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues) : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, {\n      month: 'numeric',\n      day: 'numeric'\n    });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];\n    } else {\n      renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const {\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"day-column\",\n      color: this.color,\n      items: days,\n      value: (_a = workingParts.day !== null ? workingParts.day : this.defaultParts.day) !== null && _a !== void 0 ? _a : undefined,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          day: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          day: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const {\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"month-column\",\n      color: this.color,\n      items: months,\n      value: workingParts.month,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          month: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          month: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const {\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"year-column\",\n      color: this.color,\n      items: years,\n      value: workingParts.year,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          year: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          year: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const {\n      hoursData,\n      minutesData,\n      dayPeriodData\n    } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];\n  }\n  renderHourPickerColumn(hoursData) {\n    const {\n      workingParts\n    } = this;\n    if (hoursData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      value: activePart.hour,\n      items: hoursData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          hour: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          hour: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderMinutePickerColumn(minutesData) {\n    const {\n      workingParts\n    } = this;\n    if (minutesData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      value: activePart.minute,\n      items: minutesData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          minute: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          minute: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const {\n      workingParts\n    } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return h(\"ion-picker-column-internal\", {\n      style: isDayPeriodRTL ? {\n        order: '-1'\n      } : {},\n      color: this.color,\n      value: activePart.ampm,\n      items: dayPeriodData,\n      onIonChange: ev => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderWheelView(forcePresentation) {\n    const {\n      locale\n    } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return h(\"div\", {\n      class: {\n        [`wheel-order-${columnOrder}`]: true\n      }\n    }, this.renderWheelPicker(forcePresentation));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return h(\"div\", {\n      class: \"calendar-header\"\n    }, h(\"div\", {\n      class: \"calendar-action-buttons\"\n    }, h(\"div\", {\n      class: \"calendar-month-year\"\n    }, h(\"ion-item\", {\n      part: \"month-year-button\",\n      ref: el => this.monthYearToggleItemRef = el,\n      button: true,\n      \"aria-label\": \"Show year picker\",\n      detail: false,\n      lines: \"none\",\n      onClick: () => {\n        var _a;\n        this.toggleMonthAndYearView();\n        /**\n         * TODO: FW-3547\n         *\n         * Currently there is not a way to set the aria-label on the inner button\n         * on the `ion-item` and have it be reactive to changes. This is a workaround\n         * until we either refactor `ion-item` to a button or Stencil adds a way to\n         * have reactive props for built-in properties, such as `aria-label`.\n         */\n        const {\n          monthYearToggleItemRef\n        } = this;\n        if (monthYearToggleItemRef) {\n          const btn = (_a = monthYearToggleItemRef.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.item-native');\n          if (btn) {\n            const monthYearAriaLabel = this.showMonthAndYear ? 'Hide year picker' : 'Show year picker';\n            btn.setAttribute('aria-label', monthYearAriaLabel);\n          }\n        }\n      }\n    }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", {\n      \"aria-hidden\": \"true\",\n      icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,\n      lazy: false,\n      flipRtl: true\n    })))), h(\"div\", {\n      class: \"calendar-next-prev\"\n    }, h(\"ion-buttons\", null, h(\"ion-button\", {\n      \"aria-label\": \"Previous month\",\n      disabled: prevMonthDisabled,\n      onClick: () => this.prevMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronBack,\n      lazy: false,\n      flipRtl: true\n    })), h(\"ion-button\", {\n      \"aria-label\": \"Next month\",\n      disabled: nextMonthDisabled,\n      onClick: () => this.nextMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronForward,\n      lazy: false,\n      flipRtl: true\n    }))))), h(\"div\", {\n      class: \"calendar-days-of-week\",\n      \"aria-hidden\": \"true\"\n    }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(d => {\n      return h(\"div\", {\n        class: \"day-of-week\"\n      }, d);\n    })));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), {\n        day: null\n      }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), {\n        day: null\n      })\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"div\", {\n      \"aria-hidden\": !isWorkingMonth ? 'true' : null,\n      class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled\n      }\n    }, h(\"div\", {\n      class: \"calendar-month-grid\"\n    }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const {\n        day,\n        dayOfWeek\n      } = dateObject;\n      const {\n        el,\n        highlightedDates,\n        isDateEnabled,\n        multiple\n      } = this;\n      const referenceParts = {\n        month,\n        day,\n        year\n      };\n      const isCalendarPadding = day === null;\n      const {\n        isActive,\n        isToday,\n        ariaLabel,\n        ariaSelected,\n        disabled,\n        text\n      } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      const dateIsoString = convertDataToISO(referenceParts);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(dateIsoString);\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n        }\n      }\n      let dateStyle = undefined;\n      /**\n       * Custom highlight styles should not override the style for selected dates,\n       * nor apply to \"filler days\" at the start of the grid.\n       */\n      if (highlightedDates !== undefined && !isActive && day !== null) {\n        dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n      }\n      let dateParts = undefined;\n      // \"Filler days\" at the beginning of the grid should not get the calendar day\n      // CSS parts added to them\n      if (!isCalendarPadding) {\n        dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n      }\n      return h(\"div\", {\n        class: \"calendar-day-wrapper\"\n      }, h(\"button\", {\n        // We need to use !important for the inline styles here because\n        // otherwise the CSS shadow parts will override these styles.\n        // See https://github.com/WICG/webcomponents/issues/847\n        // Both the CSS shadow parts and highlightedDates styles are\n        // provided by the developer, but highlightedDates styles should\n        // always take priority.\n        ref: el => {\n          if (el) {\n            el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n            el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n          }\n        },\n        tabindex: \"-1\",\n        \"data-day\": day,\n        \"data-month\": month,\n        \"data-year\": year,\n        \"data-index\": index,\n        \"data-day-of-week\": dayOfWeek,\n        disabled: isCalDayDisabled,\n        class: {\n          'calendar-day-padding': isCalendarPadding,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday\n        },\n        part: dateParts,\n        \"aria-hidden\": isCalendarPadding ? 'true' : null,\n        \"aria-selected\": ariaSelected,\n        \"aria-label\": ariaLabel,\n        onClick: () => {\n          if (isCalendarPadding) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n            month,\n            day,\n            year\n          }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year\n            }, isActive);\n          } else {\n            this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n              month,\n              day,\n              year\n            }));\n          }\n        }\n      }, text));\n    })));\n  }\n  renderCalendarBody() {\n    return h(\"div\", {\n      class: \"calendar-body ion-focusable\",\n      ref: el => this.calendarBodyRef = el,\n      tabindex: \"0\"\n    }, generateMonths(this.workingParts, this.forceRenderDate).map(({\n      month,\n      year\n    }) => {\n      return this.renderMonth(month, year);\n    }));\n  }\n  renderCalendar(mode) {\n    return h(\"div\", {\n      class: \"datetime-calendar\",\n      key: \"datetime-calendar\"\n    }, this.renderCalendarHeader(mode), this.renderCalendarBody());\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", {\n      name: \"time-label\"\n    }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const {\n      hourCycle,\n      isTimePopoverOpen,\n      locale\n    } = this;\n    const computedHourCycle = getHourCycle(locale, hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [h(\"div\", {\n      class: \"time-header\"\n    }, this.renderTimeLabel()), h(\"button\", {\n      class: {\n        'time-body': true,\n        'time-body-active': isTimePopoverOpen\n      },\n      part: `time-button${isTimePopoverOpen ? ' active' : ''}`,\n      \"aria-expanded\": \"false\",\n      \"aria-haspopup\": \"true\",\n      onClick: async ev => {\n        const {\n          popoverRef\n        } = this;\n        if (popoverRef) {\n          this.isTimePopoverOpen = true;\n          popoverRef.present(new CustomEvent('ionShadowTarget', {\n            detail: {\n              ionShadowTarget: ev.target\n            }\n          }));\n          await popoverRef.onWillDismiss();\n          this.isTimePopoverOpen = false;\n        }\n      }\n    }, getLocalizedTime(locale, activePart, computedHourCycle)), h(\"ion-popover\", {\n      alignment: \"center\",\n      translucent: true,\n      overlayIndex: 1,\n      arrow: false,\n      onWillPresent: ev => {\n        /**\n         * Intersection Observers do not consistently fire between Blink and Webkit\n         * when toggling the visibility of the popover and trying to scroll the picker\n         * column to the correct time value.\n         *\n         * This will correctly scroll the element position to the correct time value,\n         * before the popover is fully presented.\n         */\n        const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n        // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n        cols.forEach(col => col.scrollActiveItemIntoView());\n      },\n      style: {\n        '--offset-y': '-10px',\n        '--min-width': 'fit-content'\n      },\n      // Allow native browser keyboard events to support up/down/home/end key\n      // navigation within the time picker.\n      keyboardEvents: true,\n      ref: el => this.popoverRef = el\n    }, this.renderWheelPicker('time'))];\n  }\n  getHeaderSelectedDateText() {\n    const {\n      activeParts,\n      multiple,\n      titleSelectedDatesFormatter\n    } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        } catch (e) {\n          printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n        }\n      }\n    } else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getMonthAndDay(this.locale, this.getActivePartsWithFallback());\n    }\n    return headerText;\n  }\n  renderHeader(showExpandedHeader = true) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return h(\"div\", {\n      class: \"datetime-header\"\n    }, h(\"div\", {\n      class: \"datetime-title\"\n    }, h(\"slot\", {\n      name: \"title\"\n    }, \"Select Date\")), showExpandedHeader && h(\"div\", {\n      class: \"datetime-selected-date\"\n    }, this.getHeaderSelectedDateText()));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const {\n      presentation\n    } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return h(\"div\", {\n      class: \"datetime-time\"\n    }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", {\n      class: \"datetime-year\"\n    }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];\n      case 'time-date':\n        return [this.renderHeader(), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n      case 'time':\n        return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n      default:\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n    }\n  }\n  render() {\n    const {\n      name,\n      value,\n      disabled,\n      el,\n      color,\n      readonly,\n      showMonthAndYear,\n      preferWheel,\n      presentation,\n      size,\n      isGridStyle\n    } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return h(Host, {\n      \"aria-disabled\": disabled ? 'true' : null,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: isGridStyle\n      }))\n    }, this.renderDatetime(mode));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"],\n      \"min\": [\"minChanged\"],\n      \"max\": [\"maxChanged\"],\n      \"yearValues\": [\"yearValuesChanged\"],\n      \"monthValues\": [\"monthValuesChanged\"],\n      \"dayValues\": [\"dayValuesChanged\"],\n      \"hourValues\": [\"hourValuesChanged\"],\n      \"minuteValues\": [\"minuteValuesChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: datetimeIosCss,\n      md: datetimeMdCss\n    };\n  }\n}, [33, \"ion-datetime\", {\n  \"color\": [1],\n  \"name\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"isDateEnabled\": [16],\n  \"min\": [1025],\n  \"max\": [1025],\n  \"presentation\": [1],\n  \"cancelText\": [1, \"cancel-text\"],\n  \"doneText\": [1, \"done-text\"],\n  \"clearText\": [1, \"clear-text\"],\n  \"yearValues\": [8, \"year-values\"],\n  \"monthValues\": [8, \"month-values\"],\n  \"dayValues\": [8, \"day-values\"],\n  \"hourValues\": [8, \"hour-values\"],\n  \"minuteValues\": [8, \"minute-values\"],\n  \"locale\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"titleSelectedDatesFormatter\": [16],\n  \"multiple\": [4],\n  \"highlightedDates\": [16],\n  \"value\": [1025],\n  \"showDefaultTitle\": [4, \"show-default-title\"],\n  \"showDefaultButtons\": [4, \"show-default-buttons\"],\n  \"showClearButton\": [4, \"show-clear-button\"],\n  \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n  \"hourCycle\": [1, \"hour-cycle\"],\n  \"size\": [1],\n  \"preferWheel\": [4, \"prefer-wheel\"],\n  \"showMonthAndYear\": [32],\n  \"activeParts\": [32],\n  \"workingParts\": [32],\n  \"isTimePopoverOpen\": [32],\n  \"forceRenderDate\": [32],\n  \"confirm\": [64],\n  \"reset\": [64],\n  \"cancel\": [64]\n}, undefined, {\n  \"disabled\": [\"disabledChanged\"],\n  \"min\": [\"minChanged\"],\n  \"max\": [\"maxChanged\"],\n  \"yearValues\": [\"yearValuesChanged\"],\n  \"monthValues\": [\"monthValuesChanged\"],\n  \"dayValues\": [\"dayValuesChanged\"],\n  \"hourValues\": [\"hourValuesChanged\"],\n  \"minuteValues\": [\"minuteValuesChanged\"],\n  \"value\": [\"valueChanged\"]\n}]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-datetime\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Datetime);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$c();\n        }\n        break;\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$b();\n        }\n        break;\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n        break;\n      case \"ion-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n        break;\n      case \"ion-label\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n        break;\n      case \"ion-note\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ion-picker-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ion-popover\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonDatetime, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","startFocusVisible","r","raf","e","renderHiddenInput","g","getElementRoot","a","printIonError","p","printIonWarning","i","isRTL","c","createColorClasses","chevronBack","f","chevronForward","chevronDown","caretUpSharp","caretDownSharp","b","getIonMode","generateDayAriaLabel","getDay","isBefore","isAfter","isSameDay","d","getPreviousMonth","getNextMonth","v","validateParts","getPartsFromCalendarDay","getEndOfWeek","j","getStartOfWeek","k","getPreviousDay","l","getNextDay","m","getPreviousWeek","n","getNextWeek","parseMinParts","o","parseMaxParts","q","parseDate","w","warnIfValueOutOfBounds","convertToArrayOfNumbers","s","convertDataToISO","t","getToday","u","getClosestValidDate","x","getNumDaysInMonth","y","getCombinedDateColumnData","z","getMonthColumnData","A","getDayColumnData","B","getYearColumnData","C","isMonthFirstLocale","D","getTimeColumnsData","E","isLocaleDayPeriodRTL","F","getMonthAndYear","G","getDaysOfWeek","H","getDaysOfMonth","I","generateMonths","J","getHourCycle","K","getLocalizedTime","L","getMonthAndDay","M","formatValue","N","getNextYear","O","getPreviousYear","P","clampDate","Q","parseAmPm","R","calculateHourFromAMPM","defineCustomElement$c","defineCustomElement$b","defineCustomElement$a","defineCustomElement$9","defineCustomElement$8","defineCustomElement$7","defineCustomElement$6","defineCustomElement$5","defineCustomElement$4","defineCustomElement$3","defineCustomElement$2","isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isToday","disabled","ariaSelected","ariaLabel","text","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","isNextMonthDisabled","nextMonth","getHighlightStyles","highlightedDates","dateIsoString","el","dateStringWithoutTime","split","matchingHighlight","hd","date","textColor","backgroundColor","datetimeIosCss","datetimeMdCss","Datetime","constructor","__registerHost","__attachShadow","ionCancel","ionChange","ionValueChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","prevPresentation","warnIfIncorrectValueUsage","multiple","value","map","join","setValue","emit","getActivePartsWithFallback","_a","defaultParts","getActivePart","closeParentOverlay","popoverOrModal","closest","dismiss","setWorkingParts","workingParts","setActiveParts","removeDate","validatedParts","filter","hasSlottedButtons","querySelector","showDefaultButtons","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","partsToFocus","key","preventDefault","shiftKey","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","processMaxParts","max","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","needsiOSRubberBandFix","navigator","maxTouchPoints","scrollLeft","clientWidth","getChangedMonth","box","getBoundingClientRect","month","monthBox","Math","abs","forceRenderDate","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","resolveForceDateScrolling","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","hasValue","valueToProcess","singleValue","targetValue","hour","minute","ampm","didChangeMonth","bodyIsVisible","isGridStyle","showMonthAndYear","animateToDate","forceDateScrollingPromise","Promise","resolve","targetMonthIsBefore","onFocus","onBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","isTimePopoverOpen","color","name","readonly","isDateEnabled","presentation","cancelText","doneText","clearText","yearValues","monthValues","hourValues","minuteValues","firstDayOfWeek","titleSelectedDatesFormatter","showDefaultTitle","showClearButton","showDefaultTimeLabel","hourCycle","size","preferWheel","disabledChanged","emitStyle","minChanged","maxChanged","hasDatePresentation","yearValuesChanged","parsedYearValues","monthValuesChanged","parsedMonthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","minuteValuesChanged","parsedMinuteValues","valueChanged","closeOverlay","isCalendarPicker","activePartsIsArray","reset","startDate","cancel","connectedCallback","clearFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","visibleCallback","entries","isIntersecting","add","visibleIO","IntersectionObserver","threshold","hiddenCallback","remove","hiddenIO","stopPropagation","componentDidRender","hasCalendarGrid","componentWillLoad","interactive","datetime","renderFooter","clearButtonClick","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","activePart","monthsToRender","lastMonth","result","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","shouldRenderMonths","shouldRenderDays","days","dayObject","valueNum","parseInt","shouldRenderYears","years","showMonthFirst","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","userHasSelectedDate","hoursData","minutesData","dayPeriodData","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","order","renderWheelView","columnOrder","renderCalendarHeader","expandedIcon","collapsedIcon","prevMonthDisabled","nextMonthDisabled","hostDir","getAttribute","part","ref","monthYearToggleItemRef","button","lines","btn","monthYearAriaLabel","setAttribute","icon","lazy","flipRtl","dir","slot","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","swipeDisabled","isWorkingMonth","dateObject","dayOfWeek","isCalendarPadding","isCalDayDisabled","dateStyle","dateParts","tabindex","renderCalendarBody","renderCalendar","renderTimeLabel","hasSlottedTimeLabel","renderTimeOverlay","computedHourCycle","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","headerText","renderHeader","showExpandedHeader","hasSlottedTitle","renderTime","timeOnlyPresentation","renderCalendarViewMonthYearPicker","renderDatetime","hasWheelVariant","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","watchers","ios","md","defineCustomElement$1","customElements","components","tagName","get","define","IonDatetime","defineCustomElement"],"sources":["C:/Users/renan/ionic-app/node_modules/@ionic/core/components/ion-datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { a as printIonError, p as printIonWarning } from './index6.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, p as parseMinParts, o as parseMaxParts, q as parseDate, w as warnIfValueOutOfBounds, r as convertToArrayOfNumbers, s as convertDataToISO, t as getToday, u as getClosestValidDate, x as getNumDaysInMonth, y as getCombinedDateColumnData, z as getMonthColumnData, A as getDayColumnData, B as getYearColumnData, C as isMonthFirstLocale, D as getTimeColumnsData, E as isLocaleDayPeriodRTL, F as getMonthAndYear, G as getDaysOfWeek, H as getDaysOfMonth, I as generateMonths, J as getHourCycle, K as getLocalizedTime, L as getMonthAndDay, M as formatValue, N as getNextYear, O as getPreviousYear, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null,\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts,\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n  return isMonthDisabled(nextMonth, {\n    maxParts,\n  });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n  if (Array.isArray(highlightedDates)) {\n    const dateStringWithoutTime = dateIsoString.split('T')[0];\n    const matchingHighlight = highlightedDates.find((hd) => hd.date === dateStringWithoutTime);\n    if (matchingHighlight) {\n      return {\n        textColor: matchingHighlight.textColor,\n        backgroundColor: matchingHighlight.backgroundColor,\n      };\n    }\n  }\n  else {\n    /**\n     * Wrap in a try-catch to prevent exceptions in the user's function\n     * from interrupting the calendar's rendering.\n     */\n    try {\n      return highlightedDates(dateIsoString);\n    }\n    catch (e) {\n      printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n    }\n  }\n  return undefined;\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year) .calendar-next-prev:dir(rtl),:host(.show-month-and-year) .calendar-days-of-week:dir(rtl),:host(.show-month-and-year) .calendar-body:dir(rtl),:host(.show-month-and-year) .datetime-time:dir(rtl){left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:min(1rem, 25.6px);font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year) .calendar-next-prev:dir(rtl),:host(.show-month-and-year) .calendar-days-of-week:dir(rtl),:host(.show-month-and-year) .calendar-body:dir(rtl),:host(.show-month-and-year) .datetime-time:dir(rtl){left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\n\nconst Datetime = /*@__PURE__*/ proxyCustomElement(class Datetime extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    this.warnIfIncorrectValueUsage = () => {\n      const { multiple, value } = this;\n      if (!multiple && Array.isArray(value)) {\n        /**\n         * We do some processing on the `value` array so\n         * that it looks more like an array when logged to\n         * the console.\n         * Example given ['a', 'b']\n         * Default toString() behavior: a,b\n         * Custom behavior: ['a', 'b']\n         */\n        printIonWarning(`ion-datetime was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n      }\n    };\n    this.setValue = (value) => {\n      this.value = value;\n      this.ionChange.emit({ value });\n    };\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date and then\n     * falling back to defaultParts if no active date\n     * is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const { defaultParts } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const { activeParts } = this;\n      return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n    };\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      const { multiple, minParts, maxParts, activeParts } = this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      this.setWorkingParts(validatedParts);\n      if (multiple) {\n        const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n        }\n        else {\n          this.activeParts = [...activePartsArray, validatedParts];\n        }\n      }\n      else {\n        this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calendar-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${padding.length + day}) .calendar-day`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const { min, defaultParts } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const { max, defaultParts } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = (parts) => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          /**\n           * If the current scroll position is all the way to the left\n           * then we have scrolled to the previous month.\n           * Otherwise, assume that we have scrolled to the next\n           * month. We have a tolerance of 2px to account for\n           * sub pixel rendering.\n           *\n           * Check below the next line ensures that we did not\n           * swipe and abort (i.e. we swiped but we are still on the current month).\n           */\n          const month = calendarBodyRef.scrollLeft <= 2 ? startMonth : endMonth;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2)\n            return;\n          /**\n           * If we're force-rendering a month, assume we've\n           * scrolled to that and return it.\n           *\n           * If forceRenderDate is ever used in a context where the\n           * forced month is not immediately auto-scrolled to, this\n           * should be updated to also check whether `month` has the\n           * same month and year as the forced date.\n           */\n          const { forceRenderDate } = this;\n          if (forceRenderDate !== undefined) {\n            return { month: forceRenderDate.month, year: forceRenderDate.year, day: forceRenderDate.day };\n          }\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          }\n          else if (month === endMonth) {\n            return getNextMonth(parts);\n          }\n          else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate)\n            return;\n          const { month, day, year } = newDate;\n          if (isMonthDisabled({ month, year, day: null }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n            if (this.resolveForceDateScrolling) {\n              this.resolveForceDateScrolling();\n            }\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const { destroyCalendarListener, destroyKeyboardMO } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = (value) => {\n      const hasValue = value !== null && value !== undefined && (!Array.isArray(value) || value.length > 0);\n      const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const { minParts, maxParts, workingParts, el } = this;\n      this.warnIfIncorrectValueUsage();\n      /**\n       * Return early if the value wasn't parsed correctly, such as\n       * if an improperly formatted date string was provided.\n       */\n      if (!valueToProcess) {\n        return;\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const targetValue = clampDate(singleValue, minParts, maxParts);\n      const { month, day, year, hour, minute } = targetValue;\n      const ampm = parseAmPm(hour);\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        }\n        else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm,\n          };\n        }\n      }\n      else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n      /**\n       * Only animate if:\n       * 1. We're using grid style (wheel style pickers should just jump to new value)\n       * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n       * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n       * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n       */\n      const didChangeMonth = (month !== undefined && month !== workingParts.month) || (year !== undefined && year !== workingParts.year);\n      const bodyIsVisible = el.classList.contains('datetime-ready');\n      const { isGridStyle, showMonthAndYear } = this;\n      if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n        this.animateToDate(targetValue);\n      }\n      else {\n        /**\n         * We only need to do this if we didn't just animate to a new month,\n         * since that calls prevMonth/nextMonth which calls setWorkingParts for us.\n         */\n        this.setWorkingParts({\n          month,\n          day,\n          year,\n          hour,\n          minute,\n          ampm,\n        });\n      }\n    };\n    this.animateToDate = async (targetValue) => {\n      const { workingParts } = this;\n      /**\n       * Tell other render functions that we need to force the\n       * target month to appear in place of the actual next/prev month.\n       * Because this is a State variable, a rerender will be triggered\n       * automatically, updating the rendered months.\n       */\n      this.forceRenderDate = targetValue;\n      /**\n       * Flag that we've started scrolling to the forced date.\n       * The resolve function will be called by the datetime's\n       * scroll listener when it's done updating everything.\n       * This is a replacement for making prev/nextMonth async,\n       * since the logic we're waiting on is in a listener.\n       */\n      const forceDateScrollingPromise = new Promise((resolve) => {\n        this.resolveForceDateScrolling = resolve;\n      });\n      /**\n       * Animate smoothly to the forced month. This will also update\n       * workingParts and correct the surrounding months for us.\n       */\n      const targetMonthIsBefore = isBefore(targetValue, workingParts);\n      targetMonthIsBefore ? this.prevMonth() : this.nextMonth();\n      await forceDateScrollingPromise;\n      this.resolveForceDateScrolling = undefined;\n      this.forceRenderDate = undefined;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null;\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth',\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.isTimePopoverOpen = false;\n    this.forceRenderDate = undefined;\n    this.color = 'primary';\n    this.name = this.inputId;\n    this.disabled = false;\n    this.readonly = false;\n    this.isDateEnabled = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.presentation = 'date-time';\n    this.cancelText = 'Cancel';\n    this.doneText = 'Done';\n    this.clearText = 'Clear';\n    this.yearValues = undefined;\n    this.monthValues = undefined;\n    this.dayValues = undefined;\n    this.hourValues = undefined;\n    this.minuteValues = undefined;\n    this.locale = 'default';\n    this.firstDayOfWeek = 0;\n    this.titleSelectedDatesFormatter = undefined;\n    this.multiple = false;\n    this.highlightedDates = undefined;\n    this.value = undefined;\n    this.showDefaultTitle = false;\n    this.showDefaultButtons = false;\n    this.showClearButton = false;\n    this.showDefaultTimeLabel = true;\n    this.hourCycle = undefined;\n    this.size = 'fixed';\n    this.preferWheel = false;\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  get isGridStyle() {\n    const { presentation, preferWheel } = this;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    return hasDatePresentation && !preferWheel;\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  async valueChanged() {\n    const { value } = this;\n    if (this.hasValue()) {\n      this.processValue(value);\n    }\n    this.emitStyle();\n    this.ionValueChange.emit({ value });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    const { isCalendarPicker, activeParts } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker.\n     */\n    if (activeParts !== undefined || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.setValue(undefined);\n      }\n      else {\n        this.setValue(convertDataToISO(activeParts));\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const { presentation } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      if (workingMonth) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const { el, highlightedDates, multiple, presentation, preferWheel } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    if (highlightedDates !== undefined) {\n      if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n        printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n      }\n      if (preferWheel) {\n        printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n    const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n    const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n    const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n    const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n    const todayParts = (this.todayParts = parseDate(getToday()));\n    this.defaultParts = getClosestValidDate(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);\n    this.processMinParts();\n    this.processMaxParts();\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.setValue(undefined);\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton,\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText)), h(\"div\", { class: \"datetime-action-buttons-container\" }, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText)))))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date'\n      ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n      : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n      ? this.renderCombinedDatePickerColumn()\n      : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const { defaultParts, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), { disabled });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null\n      ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n      : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, items: items, value: todayString, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const { value } = ev.detail;\n        const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const { workingParts, isDateEnabled } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths\n      ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n      : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays\n      ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n      : [];\n    if (isDateEnabled) {\n      days = days.map((dayObject) => {\n        const { value } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year,\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), { disabled });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears\n      ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n      : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [\n        this.renderMonthPickerColumn(months),\n        this.renderDayPickerColumn(days),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    else {\n      renderArray = [\n        this.renderDayPickerColumn(days),\n        this.renderMonthPickerColumn(months),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, items: days, value: (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [\n      this.renderHourPickerColumn(hoursData),\n      this.renderMinutePickerColumn(minutesData),\n      this.renderDayPeriodPickerColumn(dayPeriodData),\n    ];\n  }\n  renderHourPickerColumn(hoursData) {\n    const { workingParts } = this;\n    if (hoursData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderMinutePickerColumn(minutesData) {\n    const { workingParts } = this;\n    if (minutesData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const { workingParts } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, value: activePart.ampm, items: dayPeriodData, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderWheelView(forcePresentation) {\n    const { locale } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return (h(\"div\", { class: {\n        [`wheel-order-${columnOrder}`]: true,\n      } }, this.renderWheelPicker(forcePresentation)));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { part: \"month-year-button\", ref: (el) => (this.monthYearToggleItemRef = el), button: true, \"aria-label\": \"Show year picker\", detail: false, lines: \"none\", onClick: () => {\n        var _a;\n        this.toggleMonthAndYearView();\n        /**\n         * TODO: FW-3547\n         *\n         * Currently there is not a way to set the aria-label on the inner button\n         * on the `ion-item` and have it be reactive to changes. This is a workaround\n         * until we either refactor `ion-item` to a button or Stencil adds a way to\n         * have reactive props for built-in properties, such as `aria-label`.\n         */\n        const { monthYearToggleItemRef } = this;\n        if (monthYearToggleItemRef) {\n          const btn = (_a = monthYearToggleItemRef.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.item-native');\n          if (btn) {\n            const monthYearAriaLabel = this.showMonthAndYear ? 'Hide year picker' : 'Show year picker';\n            btn.setAttribute('aria-label', monthYearAriaLabel);\n          }\n        }\n      } }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"Previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"Next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null,\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n      } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const { el, highlightedDates, isDateEnabled, multiple } = this;\n      const referenceParts = { month, day, year };\n      const isCalendarPadding = day === null;\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled, text } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      const dateIsoString = convertDataToISO(referenceParts);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(dateIsoString);\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n        }\n      }\n      let dateStyle = undefined;\n      /**\n       * Custom highlight styles should not override the style for selected dates,\n       * nor apply to \"filler days\" at the start of the grid.\n       */\n      if (highlightedDates !== undefined && !isActive && day !== null) {\n        dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n      }\n      let dateParts = undefined;\n      // \"Filler days\" at the beginning of the grid should not get the calendar day\n      // CSS parts added to them\n      if (!isCalendarPadding) {\n        dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n      }\n      return (h(\"div\", { class: \"calendar-day-wrapper\" }, h(\"button\", {\n        // We need to use !important for the inline styles here because\n        // otherwise the CSS shadow parts will override these styles.\n        // See https://github.com/WICG/webcomponents/issues/847\n        // Both the CSS shadow parts and highlightedDates styles are\n        // provided by the developer, but highlightedDates styles should\n        // always take priority.\n        ref: (el) => {\n          if (el) {\n            el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n            el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n          }\n        }, tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isCalDayDisabled, class: {\n          'calendar-day-padding': isCalendarPadding,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday,\n        }, part: dateParts, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (isCalendarPadding) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year,\n            }, isActive);\n          }\n          else {\n            this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n              day,\n              year }));\n          }\n        }\n      }, text)));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts, this.forceRenderDate).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", { name: \"time-label\" }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const { hourCycle, isTimePopoverOpen, locale } = this;\n    const computedHourCycle = getHourCycle(locale, hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': isTimePopoverOpen,\n        }, part: `time-button${isTimePopoverOpen ? ' active' : ''}`, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target,\n              },\n            }));\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getLocalizedTime(locale, activePart, computedHourCycle)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach((col) => col.scrollActiveItemIntoView());\n        }, style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content',\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n    ];\n  }\n  getHeaderSelectedDateText() {\n    const { activeParts, multiple, titleSelectedDatesFormatter } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        }\n        catch (e) {\n          printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n        }\n      }\n    }\n    else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getMonthAndDay(this.locale, this.getActivePartsWithFallback());\n    }\n    return headerText;\n  }\n  renderHeader(showExpandedHeader = true) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const { presentation, preferWheel } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderTime(),\n          this.renderFooter(),\n        ];\n      case 'time-date':\n        return [\n          this.renderHeader(),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n      case 'time':\n        return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n      default:\n        return [\n          this.renderHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, readonly, showMonthAndYear, preferWheel, presentation, size, isGridStyle, } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: isGridStyle,\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n  static get style() { return {\n    ios: datetimeIosCss,\n    md: datetimeMdCss\n  }; }\n}, [33, \"ion-datetime\", {\n    \"color\": [1],\n    \"name\": [1],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"isDateEnabled\": [16],\n    \"min\": [1025],\n    \"max\": [1025],\n    \"presentation\": [1],\n    \"cancelText\": [1, \"cancel-text\"],\n    \"doneText\": [1, \"done-text\"],\n    \"clearText\": [1, \"clear-text\"],\n    \"yearValues\": [8, \"year-values\"],\n    \"monthValues\": [8, \"month-values\"],\n    \"dayValues\": [8, \"day-values\"],\n    \"hourValues\": [8, \"hour-values\"],\n    \"minuteValues\": [8, \"minute-values\"],\n    \"locale\": [1],\n    \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n    \"titleSelectedDatesFormatter\": [16],\n    \"multiple\": [4],\n    \"highlightedDates\": [16],\n    \"value\": [1025],\n    \"showDefaultTitle\": [4, \"show-default-title\"],\n    \"showDefaultButtons\": [4, \"show-default-buttons\"],\n    \"showClearButton\": [4, \"show-clear-button\"],\n    \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n    \"hourCycle\": [1, \"hour-cycle\"],\n    \"size\": [1],\n    \"preferWheel\": [4, \"prefer-wheel\"],\n    \"showMonthAndYear\": [32],\n    \"activeParts\": [32],\n    \"workingParts\": [32],\n    \"isTimePopoverOpen\": [32],\n    \"forceRenderDate\": [32],\n    \"confirm\": [64],\n    \"reset\": [64],\n    \"cancel\": [64]\n  }, undefined, {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"value\": [\"valueChanged\"]\n  }]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-datetime\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Datetime);\n      }\n      break;\n    case \"ion-backdrop\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$c();\n      }\n      break;\n    case \"ion-button\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$b();\n      }\n      break;\n    case \"ion-buttons\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$a();\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$9();\n      }\n      break;\n    case \"ion-item\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$8();\n      }\n      break;\n    case \"ion-label\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$7();\n      }\n      break;\n    case \"ion-note\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$6();\n      }\n      break;\n    case \"ion-picker-column-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$5();\n      }\n      break;\n    case \"ion-picker-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$4();\n      }\n      break;\n    case \"ion-popover\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$3();\n      }\n      break;\n    case \"ion-ripple-effect\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonDatetime, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}