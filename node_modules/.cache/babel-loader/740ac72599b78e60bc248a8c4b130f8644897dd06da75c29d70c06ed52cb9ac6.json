{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _assertThisInitialized from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/renan/ionic-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Build } from '@stencil/core/internal/client';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { p as assert, s as shallowEqualStringMap } from './helpers.js';\nimport { p as printIonWarning } from './index6.js';\nimport { l as lifecycle, t as _transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index2.js';\nimport { b as getIonMode, c as config } from './ionic-global.js';\nimport { a as attachComponent } from './framework-delegate.js';\nvar VIEW_STATE_NEW = 1;\nvar VIEW_STATE_ATTACHED = 2;\nvar VIEW_STATE_DESTROYED = 3;\n// TODO(FW-2832): types\nvar ViewController = /*#__PURE__*/function () {\n  function ViewController(component, params) {\n    _classCallCheck(this, ViewController);\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  _createClass(ViewController, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(container) {\n        var component;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.state = VIEW_STATE_ATTACHED;\n              if (this.element) {\n                _context.next = 6;\n                break;\n              }\n              component = this.component;\n              _context.next = 5;\n              return attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n            case 5:\n              this.element = _context.sent;\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n    /**\n     * DOM WRITE\n     */\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n      var element = this.element;\n      if (element) {\n        if (this.delegate) {\n          this.delegate.removeViewFromDom(element.parentElement, element);\n        } else {\n          element.remove();\n        }\n      }\n      this.nav = undefined;\n      this.state = VIEW_STATE_DESTROYED;\n    }\n  }]);\n  return ViewController;\n}();\nvar matches = function matches(view, id, params) {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  return shallowEqualStringMap(view.params, params);\n};\nvar convertToView = function convertToView(page, params) {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nvar convertToViews = function convertToViews(pages) {\n  return pages.map(function (page) {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  }).filter(function (v) {\n    return v !== null;\n  });\n};\nvar navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;z-index:0}\";\nvar Nav = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(Nav, _HTMLElement);\n  var _super = _createSuper(Nav);\n  function Nav() {\n    var _this;\n    _classCallCheck(this, Nav);\n    _this = _super.call(this);\n    _this.__registerHost();\n    _this.__attachShadow();\n    _this.ionNavWillLoad = createEvent(_assertThisInitialized(_this), \"ionNavWillLoad\", 7);\n    _this.ionNavWillChange = createEvent(_assertThisInitialized(_this), \"ionNavWillChange\", 3);\n    _this.ionNavDidChange = createEvent(_assertThisInitialized(_this), \"ionNavDidChange\", 3);\n    _this.transInstr = [];\n    _this.gestureOrAnimationInProgress = false;\n    _this.useRouter = false;\n    _this.isTransitioning = false;\n    _this.destroyed = false;\n    _this.views = [];\n    _this.didLoad = false;\n    _this.delegate = undefined;\n    _this.swipeGesture = undefined;\n    _this.animated = true;\n    _this.animation = undefined;\n    _this.rootParams = undefined;\n    _this.root = undefined;\n    return _this;\n  }\n  _createClass(Nav, [{\n    key: \"swipeGestureChanged\",\n    value: function swipeGestureChanged() {\n      if (this.gesture) {\n        this.gesture.enable(this.swipeGesture === true);\n      }\n    }\n  }, {\n    key: \"rootChanged\",\n    value: function rootChanged() {\n      var isDev = Build.isDev;\n      if (this.root === undefined) {\n        return;\n      }\n      if (this.didLoad === false) {\n        /**\n         * If the component has not loaded yet, we can skip setting up the root component.\n         * It will be called when `componentDidLoad` fires.\n         */\n        return;\n      }\n      if (!this.useRouter) {\n        if (this.root !== undefined) {\n          this.setRoot(this.root, this.rootParams);\n        }\n      } else if (isDev) {\n        printIonWarning('<ion-nav> does not support a root attribute when using ion-router.', this.el);\n      }\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\n      if (this.swipeGesture === undefined) {\n        var mode = getIonMode(this);\n        this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n      }\n      this.ionNavWillLoad.emit();\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function () {\n      var _componentDidLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              // We want to set this flag before any watch callbacks are manually called\n              this.didLoad = true;\n              this.rootChanged();\n              _context2.next = 4;\n              return import('./swipe-back.js');\n            case 4:\n              this.gesture = _context2.sent.createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n              this.swipeGestureChanged();\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function componentDidLoad() {\n        return _componentDidLoad.apply(this, arguments);\n      }\n      return componentDidLoad;\n    }()\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.destroyed = false;\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var _iterator = _createForOfIteratorHelper(this.views),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var view = _step.value;\n          lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n          view._destroy();\n        }\n        // Release swipe back gesture and transition.\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (this.gesture) {\n        this.gesture.destroy();\n        this.gesture = undefined;\n      }\n      this.transInstr.length = 0;\n      this.views.length = 0;\n      this.destroyed = true;\n    }\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"push\",\n    value: function push(component, componentProps, opts, done) {\n      return this.insert(-1, component, componentProps, opts, done);\n    }\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"insert\",\n    value: function insert(insertIndex, component, componentProps, opts, done) {\n      return this.insertPages(insertIndex, [{\n        component: component,\n        componentProps: componentProps\n      }], opts, done);\n    }\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"insertPages\",\n    value: function insertPages(insertIndex, insertComponents, opts, done) {\n      return this.queueTrns({\n        insertStart: insertIndex,\n        insertViews: insertComponents,\n        opts: opts\n      }, done);\n    }\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"pop\",\n    value: function pop(opts, done) {\n      return this.removeIndex(-1, 1, opts, done);\n    }\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"popTo\",\n    value: function popTo(indexOrViewCtrl, opts, done) {\n      var ti = {\n        removeStart: -1,\n        removeCount: -1,\n        opts: opts\n      };\n      if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n        ti.removeView = indexOrViewCtrl;\n        ti.removeStart = 1;\n      } else if (typeof indexOrViewCtrl === 'number') {\n        ti.removeStart = indexOrViewCtrl + 1;\n      }\n      return this.queueTrns(ti, done);\n    }\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"popToRoot\",\n    value: function popToRoot(opts, done) {\n      return this.removeIndex(1, -1, opts, done);\n    }\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"removeIndex\",\n    value: function removeIndex(startIndex) {\n      var removeCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var opts = arguments.length > 2 ? arguments[2] : undefined;\n      var done = arguments.length > 3 ? arguments[3] : undefined;\n      return this.queueTrns({\n        removeStart: startIndex,\n        removeCount: removeCount,\n        opts: opts\n      }, done);\n    }\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"setRoot\",\n    value: function setRoot(component, componentProps, opts, done) {\n      return this.setPages([{\n        component: component,\n        componentProps: componentProps\n      }], opts, done);\n    }\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n  }, {\n    key: \"setPages\",\n    value: function setPages(views, opts, done) {\n      opts !== null && opts !== void 0 ? opts : opts = {};\n      // if animation wasn't set to true then default it to NOT animate\n      if (opts.animated !== true) {\n        opts.animated = false;\n      }\n      return this.queueTrns({\n        insertStart: 0,\n        insertViews: views,\n        removeStart: 0,\n        removeCount: -1,\n        opts: opts\n      }, done);\n    }\n    /**\n     * Called by the router to update the view.\n     *\n     * @param id The component tag.\n     * @param params The component params.\n     * @param direction A direction hint.\n     * @param animation an AnimationBuilder.\n     *\n     * @return the status.\n     * @internal\n     */\n  }, {\n    key: \"setRouteId\",\n    value: function setRouteId(id, params, direction, animation) {\n      var active = this.getActiveSync();\n      if (matches(active, id, params)) {\n        return Promise.resolve({\n          changed: false,\n          element: active.element\n        });\n      }\n      var resolve;\n      var promise = new Promise(function (r) {\n        return resolve = r;\n      });\n      var finish;\n      var commonOpts = {\n        updateURL: false,\n        viewIsReady: function viewIsReady(enteringEl) {\n          var mark;\n          var p = new Promise(function (r) {\n            return mark = r;\n          });\n          resolve({\n            changed: true,\n            element: enteringEl,\n            markVisible: function () {\n              var _markVisible = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      mark();\n                      _context3.next = 3;\n                      return finish;\n                    case 3:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3);\n              }));\n              function markVisible() {\n                return _markVisible.apply(this, arguments);\n              }\n              return markVisible;\n            }()\n          });\n          return p;\n        }\n      };\n      if (direction === 'root') {\n        finish = this.setRoot(id, params, commonOpts);\n      } else {\n        // Look for a view matching the target in the view stack.\n        var viewController = this.views.find(function (v) {\n          return matches(v, id, params);\n        });\n        if (viewController) {\n          finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), {\n            direction: 'back',\n            animationBuilder: animation\n          }));\n        } else if (direction === 'forward') {\n          finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), {\n            animationBuilder: animation\n          }));\n        } else if (direction === 'back') {\n          finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), {\n            direction: 'back',\n            animated: true,\n            animationBuilder: animation\n          }));\n        }\n      }\n      return promise;\n    }\n    /**\n     * Called by <ion-router> to retrieve the current component.\n     *\n     * @internal\n     */\n  }, {\n    key: \"getRouteId\",\n    value: function () {\n      var _getRouteId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var active;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              active = this.getActiveSync();\n              if (!active) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                id: active.element.tagName,\n                params: active.params,\n                element: active.element\n              });\n            case 3:\n              return _context4.abrupt(\"return\", undefined);\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getRouteId() {\n        return _getRouteId.apply(this, arguments);\n      }\n      return getRouteId;\n    }()\n    /**\n     * Get the active view.\n     */\n  }, {\n    key: \"getActive\",\n    value: function () {\n      var _getActive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", this.getActiveSync());\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getActive() {\n        return _getActive.apply(this, arguments);\n      }\n      return getActive;\n    }()\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n  }, {\n    key: \"getByIndex\",\n    value: function () {\n      var _getByIndex = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(index) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", this.views[index]);\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getByIndex(_x2) {\n        return _getByIndex.apply(this, arguments);\n      }\n      return getByIndex;\n    }()\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n  }, {\n    key: \"canGoBack\",\n    value: function () {\n      var _canGoBack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(view) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", this.canGoBackSync(view));\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function canGoBack(_x3) {\n        return _canGoBack.apply(this, arguments);\n      }\n      return canGoBack;\n    }()\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n  }, {\n    key: \"getPrevious\",\n    value: function () {\n      var _getPrevious = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(view) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", this.getPreviousSync(view));\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getPrevious(_x4) {\n        return _getPrevious.apply(this, arguments);\n      }\n      return getPrevious;\n    }()\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.views.length;\n    }\n  }, {\n    key: \"getActiveSync\",\n    value: function getActiveSync() {\n      return this.views[this.views.length - 1];\n    }\n  }, {\n    key: \"canGoBackSync\",\n    value: function canGoBackSync() {\n      var view = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getActiveSync();\n      return !!(view && this.getPreviousSync(view));\n    }\n  }, {\n    key: \"getPreviousSync\",\n    value: function getPreviousSync() {\n      var view = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getActiveSync();\n      if (!view) {\n        return undefined;\n      }\n      var views = this.views;\n      var index = views.indexOf(view);\n      return index > 0 ? views[index - 1] : undefined;\n    }\n    /**\n     * Adds a navigation stack change to the queue and schedules it to run.\n     *\n     * @returns Whether the transition succeeds.\n     */\n  }, {\n    key: \"queueTrns\",\n    value: function () {\n      var _queueTrns = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(ti, done) {\n        var _a, _b, promise, router, canTransition;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy))) {\n                _context9.next = 2;\n                break;\n              }\n              return _context9.abrupt(\"return\", false);\n            case 2:\n              promise = new Promise(function (resolve, reject) {\n                ti.resolve = resolve;\n                ti.reject = reject;\n              });\n              ti.done = done;\n              /**\n               * If using router, check to see if navigation hooks\n               * will allow us to perform this transition. This\n               * is required in order for hooks to work with\n               * the ion-back-button or swipe to go back.\n               */\n              if (!(ti.opts && ti.opts.updateURL !== false && this.useRouter)) {\n                _context9.next = 15;\n                break;\n              }\n              router = document.querySelector('ion-router');\n              if (!router) {\n                _context9.next = 15;\n                break;\n              }\n              _context9.next = 9;\n              return router.canTransition();\n            case 9:\n              canTransition = _context9.sent;\n              if (!(canTransition === false)) {\n                _context9.next = 12;\n                break;\n              }\n              return _context9.abrupt(\"return\", false);\n            case 12:\n              if (!(typeof canTransition === 'string')) {\n                _context9.next = 15;\n                break;\n              }\n              router.push(canTransition, ti.opts.direction || 'back');\n              return _context9.abrupt(\"return\", false);\n            case 15:\n              // Normalize empty\n              if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n                ti.insertViews = undefined;\n              }\n              // Enqueue transition instruction\n              this.transInstr.push(ti);\n              // if there isn't a transition already happening\n              // then this will kick off this transition\n              this.nextTrns();\n              return _context9.abrupt(\"return\", promise);\n            case 19:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function queueTrns(_x5, _x6) {\n        return _queueTrns.apply(this, arguments);\n      }\n      return queueTrns;\n    }()\n  }, {\n    key: \"success\",\n    value: function success(result, ti) {\n      if (this.destroyed) {\n        this.fireError('nav controller was destroyed', ti);\n        return;\n      }\n      if (ti.done) {\n        ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n      }\n      ti.resolve(result.hasCompleted);\n      if (ti.opts.updateURL !== false && this.useRouter) {\n        var router = document.querySelector('ion-router');\n        if (router) {\n          var direction = result.direction === 'back' ? 'back' : 'forward';\n          router.navChanged(direction);\n        }\n      }\n    }\n  }, {\n    key: \"failed\",\n    value: function failed(rejectReason, ti) {\n      if (this.destroyed) {\n        this.fireError('nav controller was destroyed', ti);\n        return;\n      }\n      this.transInstr.length = 0;\n      this.fireError(rejectReason, ti);\n    }\n  }, {\n    key: \"fireError\",\n    value: function fireError(rejectReason, ti) {\n      if (ti.done) {\n        ti.done(false, false, rejectReason);\n      }\n      if (ti.reject && !this.destroyed) {\n        ti.reject(rejectReason);\n      } else {\n        ti.resolve(false);\n      }\n    }\n    /**\n     * Consumes the next transition in the queue.\n     *\n     * @returns whether the transition is executed.\n     */\n  }, {\n    key: \"nextTrns\",\n    value: function nextTrns() {\n      // this is the framework's bread 'n butta function\n      // only one transition is allowed at any given time\n      if (this.isTransitioning) {\n        return false;\n      }\n      // there is no transition happening right now, executes the next instructions.\n      var ti = this.transInstr.shift();\n      if (!ti) {\n        return false;\n      }\n      this.runTransition(ti);\n      return true;\n    }\n    /** Executes all the transition instruction from the queue. */\n  }, {\n    key: \"runTransition\",\n    value: function () {\n      var _runTransition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(ti) {\n        var leavingView, enteringView, requiresTransition, isBackDirection, result;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              // set that this nav is actively transitioning\n              this.ionNavWillChange.emit();\n              this.isTransitioning = true;\n              this.prepareTI(ti);\n              leavingView = this.getActiveSync();\n              enteringView = this.getEnteringView(ti, leavingView);\n              if (!(!leavingView && !enteringView)) {\n                _context10.next = 8;\n                break;\n              }\n              throw new Error('no views in the stack to be removed');\n            case 8:\n              if (!(enteringView && enteringView.state === VIEW_STATE_NEW)) {\n                _context10.next = 11;\n                break;\n              }\n              _context10.next = 11;\n              return enteringView.init(this.el);\n            case 11:\n              this.postViewInit(enteringView, leavingView, ti);\n              // Needs transition?\n              requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\n              if (requiresTransition && ti.opts && leavingView) {\n                isBackDirection = ti.opts.direction === 'back';\n                /**\n                 * If heading back, use the entering page's animation\n                 * unless otherwise specified by the developer.\n                 */\n                if (isBackDirection) {\n                  ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\n                }\n                leavingView.animationBuilder = ti.opts.animationBuilder;\n              }\n              if (!requiresTransition) {\n                _context10.next = 20;\n                break;\n              }\n              _context10.next = 17;\n              return this.transition(enteringView, leavingView, ti);\n            case 17:\n              result = _context10.sent;\n              _context10.next = 21;\n              break;\n            case 20:\n              // transition is not required, so we are already done!\n              // they're inserting/removing the views somewhere in the middle or\n              // beginning, so visually nothing needs to animate/transition\n              // resolve immediately because there's no animation that's happening\n              result = {\n                hasCompleted: true,\n                requiresTransition: false\n              };\n            case 21:\n              this.success(result, ti);\n              this.ionNavDidChange.emit();\n              _context10.next = 28;\n              break;\n            case 25:\n              _context10.prev = 25;\n              _context10.t0 = _context10[\"catch\"](0);\n              this.failed(_context10.t0, ti);\n            case 28:\n              this.isTransitioning = false;\n              this.nextTrns();\n            case 30:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[0, 25]]);\n      }));\n      function runTransition(_x7) {\n        return _runTransition.apply(this, arguments);\n      }\n      return runTransition;\n    }()\n  }, {\n    key: \"prepareTI\",\n    value: function prepareTI(ti) {\n      var _a, _b;\n      var _c;\n      var viewsLength = this.views.length;\n      (_a = ti.opts) !== null && _a !== void 0 ? _a : ti.opts = {};\n      (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : _c.delegate = this.delegate;\n      if (ti.removeView !== undefined) {\n        assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n        assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n        var index = this.views.indexOf(ti.removeView);\n        if (index < 0) {\n          throw new Error('removeView was not found');\n        }\n        ti.removeStart += index;\n      }\n      if (ti.removeStart !== undefined) {\n        if (ti.removeStart < 0) {\n          ti.removeStart = viewsLength - 1;\n        }\n        if (ti.removeCount < 0) {\n          ti.removeCount = viewsLength - ti.removeStart;\n        }\n        ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n      }\n      if (ti.insertViews) {\n        // allow -1 to be passed in to auto push it on the end\n        // and clean up the index if it's larger then the size of the stack\n        if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n          ti.insertStart = viewsLength;\n        }\n        ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n      }\n      var insertViews = ti.insertViews;\n      if (!insertViews) {\n        return;\n      }\n      assert(insertViews.length > 0, 'length can not be zero');\n      var viewControllers = convertToViews(insertViews);\n      if (viewControllers.length === 0) {\n        throw new Error('invalid views to insert');\n      }\n      // Check all the inserted view are correct\n      var _iterator2 = _createForOfIteratorHelper(viewControllers),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var view = _step2.value;\n          view.delegate = ti.opts.delegate;\n          var nav = view.nav;\n          if (nav && nav !== this) {\n            throw new Error('inserted view was already inserted');\n          }\n          if (view.state === VIEW_STATE_DESTROYED) {\n            throw new Error('inserted view was already destroyed');\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      ti.insertViews = viewControllers;\n    }\n    /**\n     * Returns the view that will be entered considering the transition instructions.\n     *\n     * @param ti The instructions.\n     * @param leavingView The view being left or undefined if none.\n     *\n     * @returns The view that will be entered, undefined if none.\n     */\n  }, {\n    key: \"getEnteringView\",\n    value: function getEnteringView(ti, leavingView) {\n      // The last inserted view will be entered when view are inserted.\n      var insertViews = ti.insertViews;\n      if (insertViews !== undefined) {\n        return insertViews[insertViews.length - 1];\n      }\n      // When views are deleted, we will enter the last view that is not removed and not the view being left.\n      var removeStart = ti.removeStart;\n      if (removeStart !== undefined) {\n        var views = this.views;\n        var removeEnd = removeStart + ti.removeCount;\n        for (var i = views.length - 1; i >= 0; i--) {\n          var view = views[i];\n          if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n            return view;\n          }\n        }\n      }\n      return undefined;\n    }\n    /**\n     * Adds and Removes the views from the navigation stack.\n     *\n     * @param enteringView The view being entered.\n     * @param leavingView The view being left.\n     * @param ti The instructions.\n     */\n  }, {\n    key: \"postViewInit\",\n    value: function postViewInit(enteringView, leavingView, ti) {\n      var _a, _b, _c;\n      assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n      assert(ti.resolve, 'resolve must be valid');\n      assert(ti.reject, 'reject must be valid');\n      // Compute the views to remove.\n      var opts = ti.opts;\n      var insertViews = ti.insertViews,\n        removeStart = ti.removeStart,\n        removeCount = ti.removeCount;\n      /** Records the view to destroy */\n      var destroyQueue;\n      // there are views to remove\n      if (removeStart !== undefined && removeCount !== undefined) {\n        assert(removeStart >= 0, 'removeStart can not be negative');\n        assert(removeCount >= 0, 'removeCount can not be negative');\n        destroyQueue = [];\n        for (var i = removeStart; i < removeStart + removeCount; i++) {\n          var view = this.views[i];\n          if (view !== undefined && view !== enteringView && view !== leavingView) {\n            destroyQueue.push(view);\n          }\n        }\n        // default the direction to \"back\"\n        (_a = opts.direction) !== null && _a !== void 0 ? _a : opts.direction = 'back';\n      }\n      var finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\n      assert(finalNumViews >= 0, 'final balance can not be negative');\n      if (finalNumViews === 0) {\n        console.warn(\"You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.\", this, this.el);\n        throw new Error('navigation stack needs at least one root page');\n      }\n      // At this point the transition can not be rejected, any throw should be an error\n      // Insert the new views in the stack.\n      if (insertViews) {\n        // add the views to the\n        var insertIndex = ti.insertStart;\n        var _iterator3 = _createForOfIteratorHelper(insertViews),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _view = _step3.value;\n            this.insertViewAt(_view, insertIndex);\n            insertIndex++;\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n        if (ti.enteringRequiresTransition) {\n          // default to forward if not already set\n          (_c = opts.direction) !== null && _c !== void 0 ? _c : opts.direction = 'forward';\n        }\n      }\n      // if the views to be removed are in the beginning or middle\n      // and there is not a view that needs to visually transition out\n      // then just destroy them and don't transition anything\n      // batch all of lifecycles together\n      // let's make sure, callbacks are zoned\n      if (destroyQueue && destroyQueue.length > 0) {\n        var _iterator4 = _createForOfIteratorHelper(destroyQueue),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _view2 = _step4.value;\n            lifecycle(_view2.element, LIFECYCLE_WILL_LEAVE);\n            lifecycle(_view2.element, LIFECYCLE_DID_LEAVE);\n            lifecycle(_view2.element, LIFECYCLE_WILL_UNLOAD);\n          }\n          // once all lifecycle events has been delivered, we can safely detroy the views\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        var _iterator5 = _createForOfIteratorHelper(destroyQueue),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _view3 = _step5.value;\n            this.destroyView(_view3);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    }\n  }, {\n    key: \"transition\",\n    value: function () {\n      var _transition2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(enteringView, leavingView, ti) {\n        var _this2 = this;\n        var opts, progressCallback, mode, enteringEl, leavingEl, animationOpts, _yield$_transition, hasCompleted;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              // we should animate (duration > 0) if the pushed page is not the first one (startup)\n              // or if it is a portal (modal, actionsheet, etc.)\n              opts = ti.opts;\n              progressCallback = opts.progressAnimation ? function (ani) {\n                /**\n                 * Because this progress callback is called asynchronously\n                 * it is possible for the gesture to start and end before\n                 * the animation is ever set. In that scenario, we should\n                 * immediately call progressEnd so that the transition promise\n                 * resolves and the gesture does not get locked up.\n                 */\n                if (ani !== undefined && !_this2.gestureOrAnimationInProgress) {\n                  _this2.gestureOrAnimationInProgress = true;\n                  ani.onFinish(function () {\n                    _this2.gestureOrAnimationInProgress = false;\n                  }, {\n                    oneTimeCallback: true\n                  });\n                  /**\n                   * Playing animation to beginning\n                   * with a duration of 0 prevents\n                   * any flickering when the animation\n                   * is later cleaned up.\n                   */\n                  ani.progressEnd(0, 0, 0);\n                } else {\n                  _this2.sbAni = ani;\n                }\n              } : undefined;\n              mode = getIonMode(this);\n              enteringEl = enteringView.element; // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n              leavingEl = leavingView && leavingView.element;\n              animationOpts = Object.assign(Object.assign({\n                mode: mode,\n                showGoBack: this.canGoBackSync(enteringView),\n                baseEl: this.el,\n                progressCallback: progressCallback,\n                animated: this.animated && config.getBoolean('animated', true),\n                enteringEl: enteringEl,\n                leavingEl: leavingEl\n              }, opts), {\n                animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation')\n              });\n              _context11.next = 8;\n              return _transition(animationOpts);\n            case 8:\n              _yield$_transition = _context11.sent;\n              hasCompleted = _yield$_transition.hasCompleted;\n              return _context11.abrupt(\"return\", this.transitionFinish(hasCompleted, enteringView, leavingView, opts));\n            case 11:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function transition(_x8, _x9, _x10) {\n        return _transition2.apply(this, arguments);\n      }\n      return transition;\n    }()\n  }, {\n    key: \"transitionFinish\",\n    value: function transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n      /**\n       * If the transition did not complete, the leavingView will still be the active\n       * view on the stack. Otherwise unmount all the views after the enteringView.\n       */\n      var activeView = hasCompleted ? enteringView : leavingView;\n      if (activeView) {\n        this.unmountInactiveViews(activeView);\n      }\n      return {\n        hasCompleted: hasCompleted,\n        requiresTransition: true,\n        enteringView: enteringView,\n        leavingView: leavingView,\n        direction: opts.direction\n      };\n    }\n    /**\n     * Inserts a view at the specified index.\n     *\n     * When the view already is in the stack it will be moved to the new position.\n     *\n     * @param view The view to insert.\n     * @param index The index where to insert the view.\n     */\n  }, {\n    key: \"insertViewAt\",\n    value: function insertViewAt(view, index) {\n      var views = this.views;\n      var existingIndex = views.indexOf(view);\n      if (existingIndex > -1) {\n        assert(view.nav === this, 'view is not part of the nav');\n        // The view already in the stack, removes it.\n        views.splice(existingIndex, 1);\n        // and add it back at the requested index.\n        views.splice(index, 0, view);\n      } else {\n        assert(!view.nav, 'nav is used');\n        // this is a new view to add to the stack\n        // create the new entering view\n        view.nav = this;\n        views.splice(index, 0, view);\n      }\n    }\n    /**\n     * Removes a view from the stack.\n     *\n     * @param view The view to remove.\n     */\n  }, {\n    key: \"removeView\",\n    value: function removeView(view) {\n      assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n      var views = this.views;\n      var index = views.indexOf(view);\n      assert(index > -1, 'view must be part of the stack');\n      if (index >= 0) {\n        views.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"destroyView\",\n    value: function destroyView(view) {\n      view._destroy();\n      this.removeView(view);\n    }\n    /**\n     * Unmounts all inactive views after the specified active view.\n     *\n     * DOM WRITE\n     *\n     * @param activeView The view that is actively visible in the stack. Used to calculate which views to unmount.\n     */\n  }, {\n    key: \"unmountInactiveViews\",\n    value: function unmountInactiveViews(activeView) {\n      // ok, cleanup time!! Destroy all of the views that are\n      // INACTIVE and come after the active view\n      // only do this if the views exist, though\n      if (this.destroyed) {\n        return;\n      }\n      var views = this.views;\n      var activeViewIndex = views.indexOf(activeView);\n      for (var i = views.length - 1; i >= 0; i--) {\n        var view = views[i];\n        /**\n         * When inserting multiple views via insertPages\n         * the last page will be transitioned to, but the\n         * others will not be. As a result, a DOM element\n         * will only be created for the last page inserted.\n         * As a result, it is possible to have views in the\n         * stack that do not have `view.element` yet.\n         */\n        var element = view.element;\n        if (element) {\n          if (i > activeViewIndex) {\n            // this view comes after the active view\n            // let's unload it\n            lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n            this.destroyView(view);\n          } else if (i < activeViewIndex) {\n            // this view comes before the active view\n            // and it is not a portal then ensure it is hidden\n            setPageHidden(element, true);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      return !this.gestureOrAnimationInProgress && !!this.swipeGesture && !this.isTransitioning && this.transInstr.length === 0 && this.canGoBackSync();\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.gestureOrAnimationInProgress = true;\n      this.pop({\n        direction: 'back',\n        progressAnimation: true\n      });\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(stepValue) {\n      if (this.sbAni) {\n        this.sbAni.progressStep(stepValue);\n      }\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(shouldComplete, stepValue, dur) {\n      var _this3 = this;\n      if (this.sbAni) {\n        this.sbAni.onFinish(function () {\n          _this3.gestureOrAnimationInProgress = false;\n        }, {\n          oneTimeCallback: true\n        });\n        // Account for rounding errors in JS\n        var newStepValue = shouldComplete ? -0.001 : 0.001;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        if (!shouldComplete) {\n          this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n          newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n        } else {\n          newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n        }\n        this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n      } else {\n        this.gestureOrAnimationInProgress = false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h(\"slot\", null);\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"root\": [\"rootChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return navCss;\n    }\n  }]);\n  return Nav;\n}(HTMLElement), [1, \"ion-nav\", {\n  \"delegate\": [16],\n  \"swipeGesture\": [1028, \"swipe-gesture\"],\n  \"animated\": [4],\n  \"animation\": [16],\n  \"rootParams\": [16],\n  \"root\": [1],\n  \"push\": [64],\n  \"insert\": [64],\n  \"insertPages\": [64],\n  \"pop\": [64],\n  \"popTo\": [64],\n  \"popToRoot\": [64],\n  \"removeIndex\": [64],\n  \"setRoot\": [64],\n  \"setPages\": [64],\n  \"setRouteId\": [64],\n  \"getRouteId\": [64],\n  \"getActive\": [64],\n  \"getByIndex\": [64],\n  \"canGoBack\": [64],\n  \"getPrevious\": [64]\n}, undefined, {\n  \"swipeGesture\": [\"swipeGestureChanged\"],\n  \"root\": [\"rootChanged\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  var components = [\"ion-nav\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-nav\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Nav);\n        }\n        break;\n    }\n  });\n}\nvar IonNav = Nav;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonNav, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","h","Build","g","getTimeGivenProgression","p","assert","s","shallowEqualStringMap","printIonWarning","l","lifecycle","t","transition","setPageHidden","d","LIFECYCLE_WILL_UNLOAD","b","LIFECYCLE_WILL_LEAVE","c","LIFECYCLE_DID_LEAVE","getIonMode","config","a","attachComponent","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","_classCallCheck","state","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","container","wrap","_callee$","_context","prev","next","element","delegate","sent","stop","init","_x","apply","arguments","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","_HTMLElement","_inherits","_super","_createSuper","_this","call","__registerHost","__attachShadow","ionNavWillLoad","_assertThisInitialized","ionNavWillChange","ionNavDidChange","transInstr","gestureOrAnimationInProgress","useRouter","isTransitioning","destroyed","views","didLoad","swipeGesture","animated","animation","rootParams","root","swipeGestureChanged","gesture","enable","rootChanged","isDev","setRoot","el","componentWillLoad","document","querySelector","closest","mode","getBoolean","emit","_componentDidLoad","_callee2","_callee2$","_context2","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","componentDidLoad","connectedCallback","disconnectedCallback","_iterator","_createForOfIteratorHelper","_step","n","done","err","e","f","destroy","length","push","opts","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","pop","removeIndex","popTo","indexOrViewCtrl","ti","removeStart","removeCount","removeView","popToRoot","startIndex","setPages","setRouteId","direction","active","getActiveSync","Promise","resolve","changed","promise","r","finish","commonOpts","updateURL","viewIsReady","enteringEl","markVisible","_markVisible","_callee3","_callee3$","_context3","viewController","find","Object","assign","animationBuilder","_getRouteId","_callee4","_callee4$","_context4","abrupt","tagName","getRouteId","_getActive","_callee5","_callee5$","_context5","getActive","_getByIndex","_callee6","index","_callee6$","_context6","getByIndex","_x2","_canGoBack","_callee7","_callee7$","_context7","canGoBackSync","canGoBack","_x3","_getPrevious","_callee8","_callee8$","_context8","getPreviousSync","getPrevious","_x4","getLength","indexOf","_queueTrns","_callee9","_a","_b","router","canTransition","_callee9$","_context9","skipIfBusy","reject","nextTrns","_x5","_x6","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","_runTransition","_callee10","isBackDirection","_callee10$","_context10","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","t0","_x7","_c","viewsLength","viewControllers","_iterator2","_step2","removeEnd","i","destroyQueue","finalNumViews","console","warn","_iterator3","_step3","insertViewAt","_iterator4","_step4","_iterator5","_step5","destroyView","_transition2","_callee11","_this2","progressCallback","leavingEl","animationOpts","_yield$_transition","_callee11$","_context11","progressAnimation","ani","onFinish","oneTimeCallback","progressEnd","sbAni","showGoBack","baseEl","get","transitionFinish","_x8","_x9","_x10","activeView","unmountInactiveViews","existingIndex","splice","activeViewIndex","stepValue","progressStep","shouldComplete","dur","_this3","newStepValue","easing","render","defineCustomElement$1","customElements","components","forEach","define","IonNav","defineCustomElement"],"sources":["C:/Users/renan/ionic-app/node_modules/@ionic/core/components/ion-nav.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Build } from '@stencil/core/internal/client';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { p as assert, s as shallowEqualStringMap } from './helpers.js';\nimport { p as printIonWarning } from './index6.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index2.js';\nimport { b as getIonMode, c as config } from './ionic-global.js';\nimport { a as attachComponent } from './framework-delegate.js';\n\nconst VIEW_STATE_NEW = 1;\nconst VIEW_STATE_ATTACHED = 2;\nconst VIEW_STATE_DESTROYED = 3;\n// TODO(FW-2832): types\nclass ViewController {\n  constructor(component, params) {\n    this.component = component;\n    this.params = params;\n    this.state = VIEW_STATE_NEW;\n  }\n  async init(container) {\n    this.state = VIEW_STATE_ATTACHED;\n    if (!this.element) {\n      const component = this.component;\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\n    }\n  }\n  /**\n   * DOM WRITE\n   */\n  _destroy() {\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n    const element = this.element;\n    if (element) {\n      if (this.delegate) {\n        this.delegate.removeViewFromDom(element.parentElement, element);\n      }\n      else {\n        element.remove();\n      }\n    }\n    this.nav = undefined;\n    this.state = VIEW_STATE_DESTROYED;\n  }\n}\nconst matches = (view, id, params) => {\n  if (!view) {\n    return false;\n  }\n  if (view.component !== id) {\n    return false;\n  }\n  return shallowEqualStringMap(view.params, params);\n};\nconst convertToView = (page, params) => {\n  if (!page) {\n    return null;\n  }\n  if (page instanceof ViewController) {\n    return page;\n  }\n  return new ViewController(page, params);\n};\nconst convertToViews = (pages) => {\n  return pages\n    .map((page) => {\n    if (page instanceof ViewController) {\n      return page;\n    }\n    if ('component' in page) {\n      return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\n    }\n    return convertToView(page, undefined);\n  })\n    .filter((v) => v !== null);\n};\n\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;z-index:0}\";\n\nconst Nav = /*@__PURE__*/ proxyCustomElement(class Nav extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n    this.transInstr = [];\n    this.gestureOrAnimationInProgress = false;\n    this.useRouter = false;\n    this.isTransitioning = false;\n    this.destroyed = false;\n    this.views = [];\n    this.didLoad = false;\n    this.delegate = undefined;\n    this.swipeGesture = undefined;\n    this.animated = true;\n    this.animation = undefined;\n    this.rootParams = undefined;\n    this.root = undefined;\n  }\n  swipeGestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(this.swipeGesture === true);\n    }\n  }\n  rootChanged() {\n    const isDev = Build.isDev;\n    if (this.root === undefined) {\n      return;\n    }\n    if (this.didLoad === false) {\n      /**\n       * If the component has not loaded yet, we can skip setting up the root component.\n       * It will be called when `componentDidLoad` fires.\n       */\n      return;\n    }\n    if (!this.useRouter) {\n      if (this.root !== undefined) {\n        this.setRoot(this.root, this.rootParams);\n      }\n    }\n    else if (isDev) {\n      printIonWarning('<ion-nav> does not support a root attribute when using ion-router.', this.el);\n    }\n  }\n  componentWillLoad() {\n    this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\n    if (this.swipeGesture === undefined) {\n      const mode = getIonMode(this);\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n    }\n    this.ionNavWillLoad.emit();\n  }\n  async componentDidLoad() {\n    // We want to set this flag before any watch callbacks are manually called\n    this.didLoad = true;\n    this.rootChanged();\n    this.gesture = (await import('./swipe-back.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n    this.swipeGestureChanged();\n  }\n  connectedCallback() {\n    this.destroyed = false;\n  }\n  disconnectedCallback() {\n    for (const view of this.views) {\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      view._destroy();\n    }\n    // Release swipe back gesture and transition.\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.transInstr.length = 0;\n    this.views.length = 0;\n    this.destroyed = true;\n  }\n  /**\n   * Push a new component onto the current navigation stack. Pass any additional\n   * information along as an object. This additional information is accessible\n   * through NavParams.\n   *\n   * @param component The component to push onto the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  push(component, componentProps, opts, done) {\n    return this.insert(-1, component, componentProps, opts, done);\n  }\n  /**\n   * Inserts a component into the navigation stack at the specified index.\n   * This is useful to add a component at any point in the navigation stack.\n   *\n   * @param insertIndex The index to insert the component at in the stack.\n   * @param component The component to insert into the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insert(insertIndex, component, componentProps, opts, done) {\n    return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\n  }\n  /**\n   * Inserts an array of components into the navigation stack at the specified index.\n   * The last component in the array will become instantiated as a view, and animate\n   * in to become the active view.\n   *\n   * @param insertIndex The index to insert the components at in the stack.\n   * @param insertComponents The components to insert into the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  insertPages(insertIndex, insertComponents, opts, done) {\n    return this.queueTrns({\n      insertStart: insertIndex,\n      insertViews: insertComponents,\n      opts,\n    }, done);\n  }\n  /**\n   * Pop a component off of the navigation stack. Navigates back from the current\n   * component.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  pop(opts, done) {\n    return this.removeIndex(-1, 1, opts, done);\n  }\n  /**\n   * Pop to a specific index in the navigation stack.\n   *\n   * @param indexOrViewCtrl The index or view controller to pop to.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popTo(indexOrViewCtrl, opts, done) {\n    const ti = {\n      removeStart: -1,\n      removeCount: -1,\n      opts,\n    };\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n      ti.removeView = indexOrViewCtrl;\n      ti.removeStart = 1;\n    }\n    else if (typeof indexOrViewCtrl === 'number') {\n      ti.removeStart = indexOrViewCtrl + 1;\n    }\n    return this.queueTrns(ti, done);\n  }\n  /**\n   * Navigate back to the root of the stack, no matter how far back that is.\n   *\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  popToRoot(opts, done) {\n    return this.removeIndex(1, -1, opts, done);\n  }\n  /**\n   * Removes a component from the navigation stack at the specified index.\n   *\n   * @param startIndex The number to begin removal at.\n   * @param removeCount The number of components to remove.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  removeIndex(startIndex, removeCount = 1, opts, done) {\n    return this.queueTrns({\n      removeStart: startIndex,\n      removeCount,\n      opts,\n    }, done);\n  }\n  /**\n   * Set the root for the current navigation stack to a component.\n   *\n   * @param component The component to set as the root of the navigation stack.\n   * @param componentProps Any properties of the component.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setRoot(component, componentProps, opts, done) {\n    return this.setPages([{ component, componentProps }], opts, done);\n  }\n  /**\n   * Set the views of the current navigation stack and navigate to the last view.\n   * By default animations are disabled, but they can be enabled by passing options\n   * to the navigation controller. Navigation parameters can also be passed to the\n   * individual pages in the array.\n   *\n   * @param views The list of views to set as the navigation stack.\n   * @param opts The navigation options.\n   * @param done The transition complete function.\n   */\n  setPages(views, opts, done) {\n    opts !== null && opts !== void 0 ? opts : (opts = {});\n    // if animation wasn't set to true then default it to NOT animate\n    if (opts.animated !== true) {\n      opts.animated = false;\n    }\n    return this.queueTrns({\n      insertStart: 0,\n      insertViews: views,\n      removeStart: 0,\n      removeCount: -1,\n      opts,\n    }, done);\n  }\n  /**\n   * Called by the router to update the view.\n   *\n   * @param id The component tag.\n   * @param params The component params.\n   * @param direction A direction hint.\n   * @param animation an AnimationBuilder.\n   *\n   * @return the status.\n   * @internal\n   */\n  setRouteId(id, params, direction, animation) {\n    const active = this.getActiveSync();\n    if (matches(active, id, params)) {\n      return Promise.resolve({\n        changed: false,\n        element: active.element,\n      });\n    }\n    let resolve;\n    const promise = new Promise((r) => (resolve = r));\n    let finish;\n    const commonOpts = {\n      updateURL: false,\n      viewIsReady: (enteringEl) => {\n        let mark;\n        const p = new Promise((r) => (mark = r));\n        resolve({\n          changed: true,\n          element: enteringEl,\n          markVisible: async () => {\n            mark();\n            await finish;\n          },\n        });\n        return p;\n      },\n    };\n    if (direction === 'root') {\n      finish = this.setRoot(id, params, commonOpts);\n    }\n    else {\n      // Look for a view matching the target in the view stack.\n      const viewController = this.views.find((v) => matches(v, id, params));\n      if (viewController) {\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n      }\n      else if (direction === 'forward') {\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n      }\n      else if (direction === 'back') {\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n      }\n    }\n    return promise;\n  }\n  /**\n   * Called by <ion-router> to retrieve the current component.\n   *\n   * @internal\n   */\n  async getRouteId() {\n    const active = this.getActiveSync();\n    if (active) {\n      return {\n        id: active.element.tagName,\n        params: active.params,\n        element: active.element,\n      };\n    }\n    return undefined;\n  }\n  /**\n   * Get the active view.\n   */\n  async getActive() {\n    return this.getActiveSync();\n  }\n  /**\n   * Get the view at the specified index.\n   *\n   * @param index The index of the view.\n   */\n  async getByIndex(index) {\n    return this.views[index];\n  }\n  /**\n   * Returns `true` if the current view can go back.\n   *\n   * @param view The view to check.\n   */\n  async canGoBack(view) {\n    return this.canGoBackSync(view);\n  }\n  /**\n   * Get the previous view.\n   *\n   * @param view The view to get.\n   */\n  async getPrevious(view) {\n    return this.getPreviousSync(view);\n  }\n  getLength() {\n    return this.views.length;\n  }\n  getActiveSync() {\n    return this.views[this.views.length - 1];\n  }\n  canGoBackSync(view = this.getActiveSync()) {\n    return !!(view && this.getPreviousSync(view));\n  }\n  getPreviousSync(view = this.getActiveSync()) {\n    if (!view) {\n      return undefined;\n    }\n    const views = this.views;\n    const index = views.indexOf(view);\n    return index > 0 ? views[index - 1] : undefined;\n  }\n  /**\n   * Adds a navigation stack change to the queue and schedules it to run.\n   *\n   * @returns Whether the transition succeeds.\n   */\n  async queueTrns(ti, done) {\n    var _a, _b;\n    if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\n      return false;\n    }\n    const promise = new Promise((resolve, reject) => {\n      ti.resolve = resolve;\n      ti.reject = reject;\n    });\n    ti.done = done;\n    /**\n     * If using router, check to see if navigation hooks\n     * will allow us to perform this transition. This\n     * is required in order for hooks to work with\n     * the ion-back-button or swipe to go back.\n     */\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const canTransition = await router.canTransition();\n        if (canTransition === false) {\n          return false;\n        }\n        if (typeof canTransition === 'string') {\n          router.push(canTransition, ti.opts.direction || 'back');\n          return false;\n        }\n      }\n    }\n    // Normalize empty\n    if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\n      ti.insertViews = undefined;\n    }\n    // Enqueue transition instruction\n    this.transInstr.push(ti);\n    // if there isn't a transition already happening\n    // then this will kick off this transition\n    this.nextTrns();\n    return promise;\n  }\n  success(result, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    if (ti.done) {\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n    }\n    ti.resolve(result.hasCompleted);\n    if (ti.opts.updateURL !== false && this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        const direction = result.direction === 'back' ? 'back' : 'forward';\n        router.navChanged(direction);\n      }\n    }\n  }\n  failed(rejectReason, ti) {\n    if (this.destroyed) {\n      this.fireError('nav controller was destroyed', ti);\n      return;\n    }\n    this.transInstr.length = 0;\n    this.fireError(rejectReason, ti);\n  }\n  fireError(rejectReason, ti) {\n    if (ti.done) {\n      ti.done(false, false, rejectReason);\n    }\n    if (ti.reject && !this.destroyed) {\n      ti.reject(rejectReason);\n    }\n    else {\n      ti.resolve(false);\n    }\n  }\n  /**\n   * Consumes the next transition in the queue.\n   *\n   * @returns whether the transition is executed.\n   */\n  nextTrns() {\n    // this is the framework's bread 'n butta function\n    // only one transition is allowed at any given time\n    if (this.isTransitioning) {\n      return false;\n    }\n    // there is no transition happening right now, executes the next instructions.\n    const ti = this.transInstr.shift();\n    if (!ti) {\n      return false;\n    }\n    this.runTransition(ti);\n    return true;\n  }\n  /** Executes all the transition instruction from the queue. */\n  async runTransition(ti) {\n    try {\n      // set that this nav is actively transitioning\n      this.ionNavWillChange.emit();\n      this.isTransitioning = true;\n      this.prepareTI(ti);\n      const leavingView = this.getActiveSync();\n      const enteringView = this.getEnteringView(ti, leavingView);\n      if (!leavingView && !enteringView) {\n        throw new Error('no views in the stack to be removed');\n      }\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\n        await enteringView.init(this.el);\n      }\n      this.postViewInit(enteringView, leavingView, ti);\n      // Needs transition?\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\n      if (requiresTransition && ti.opts && leavingView) {\n        const isBackDirection = ti.opts.direction === 'back';\n        /**\n         * If heading back, use the entering page's animation\n         * unless otherwise specified by the developer.\n         */\n        if (isBackDirection) {\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\n        }\n        leavingView.animationBuilder = ti.opts.animationBuilder;\n      }\n      let result;\n      if (requiresTransition) {\n        result = await this.transition(enteringView, leavingView, ti);\n      }\n      else {\n        // transition is not required, so we are already done!\n        // they're inserting/removing the views somewhere in the middle or\n        // beginning, so visually nothing needs to animate/transition\n        // resolve immediately because there's no animation that's happening\n        result = {\n          hasCompleted: true,\n          requiresTransition: false,\n        };\n      }\n      this.success(result, ti);\n      this.ionNavDidChange.emit();\n    }\n    catch (rejectReason) {\n      this.failed(rejectReason, ti);\n    }\n    this.isTransitioning = false;\n    this.nextTrns();\n  }\n  prepareTI(ti) {\n    var _a, _b;\n    var _c;\n    const viewsLength = this.views.length;\n    (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\n    (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\n    if (ti.removeView !== undefined) {\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n      const index = this.views.indexOf(ti.removeView);\n      if (index < 0) {\n        throw new Error('removeView was not found');\n      }\n      ti.removeStart += index;\n    }\n    if (ti.removeStart !== undefined) {\n      if (ti.removeStart < 0) {\n        ti.removeStart = viewsLength - 1;\n      }\n      if (ti.removeCount < 0) {\n        ti.removeCount = viewsLength - ti.removeStart;\n      }\n      ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n    }\n    if (ti.insertViews) {\n      // allow -1 to be passed in to auto push it on the end\n      // and clean up the index if it's larger then the size of the stack\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n        ti.insertStart = viewsLength;\n      }\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n    }\n    const insertViews = ti.insertViews;\n    if (!insertViews) {\n      return;\n    }\n    assert(insertViews.length > 0, 'length can not be zero');\n    const viewControllers = convertToViews(insertViews);\n    if (viewControllers.length === 0) {\n      throw new Error('invalid views to insert');\n    }\n    // Check all the inserted view are correct\n    for (const view of viewControllers) {\n      view.delegate = ti.opts.delegate;\n      const nav = view.nav;\n      if (nav && nav !== this) {\n        throw new Error('inserted view was already inserted');\n      }\n      if (view.state === VIEW_STATE_DESTROYED) {\n        throw new Error('inserted view was already destroyed');\n      }\n    }\n    ti.insertViews = viewControllers;\n  }\n  /**\n   * Returns the view that will be entered considering the transition instructions.\n   *\n   * @param ti The instructions.\n   * @param leavingView The view being left or undefined if none.\n   *\n   * @returns The view that will be entered, undefined if none.\n   */\n  getEnteringView(ti, leavingView) {\n    // The last inserted view will be entered when view are inserted.\n    const insertViews = ti.insertViews;\n    if (insertViews !== undefined) {\n      return insertViews[insertViews.length - 1];\n    }\n    // When views are deleted, we will enter the last view that is not removed and not the view being left.\n    const removeStart = ti.removeStart;\n    if (removeStart !== undefined) {\n      const views = this.views;\n      const removeEnd = removeStart + ti.removeCount;\n      for (let i = views.length - 1; i >= 0; i--) {\n        const view = views[i];\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n          return view;\n        }\n      }\n    }\n    return undefined;\n  }\n  /**\n   * Adds and Removes the views from the navigation stack.\n   *\n   * @param enteringView The view being entered.\n   * @param leavingView The view being left.\n   * @param ti The instructions.\n   */\n  postViewInit(enteringView, leavingView, ti) {\n    var _a, _b, _c;\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n    assert(ti.resolve, 'resolve must be valid');\n    assert(ti.reject, 'reject must be valid');\n    // Compute the views to remove.\n    const opts = ti.opts;\n    const { insertViews, removeStart, removeCount } = ti;\n    /** Records the view to destroy */\n    let destroyQueue;\n    // there are views to remove\n    if (removeStart !== undefined && removeCount !== undefined) {\n      assert(removeStart >= 0, 'removeStart can not be negative');\n      assert(removeCount >= 0, 'removeCount can not be negative');\n      destroyQueue = [];\n      for (let i = removeStart; i < removeStart + removeCount; i++) {\n        const view = this.views[i];\n        if (view !== undefined && view !== enteringView && view !== leavingView) {\n          destroyQueue.push(view);\n        }\n      }\n      // default the direction to \"back\"\n      (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\n    }\n    const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\n    assert(finalNumViews >= 0, 'final balance can not be negative');\n    if (finalNumViews === 0) {\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\n      throw new Error('navigation stack needs at least one root page');\n    }\n    // At this point the transition can not be rejected, any throw should be an error\n    // Insert the new views in the stack.\n    if (insertViews) {\n      // add the views to the\n      let insertIndex = ti.insertStart;\n      for (const view of insertViews) {\n        this.insertViewAt(view, insertIndex);\n        insertIndex++;\n      }\n      if (ti.enteringRequiresTransition) {\n        // default to forward if not already set\n        (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\n      }\n    }\n    // if the views to be removed are in the beginning or middle\n    // and there is not a view that needs to visually transition out\n    // then just destroy them and don't transition anything\n    // batch all of lifecycles together\n    // let's make sure, callbacks are zoned\n    if (destroyQueue && destroyQueue.length > 0) {\n      for (const view of destroyQueue) {\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n      }\n      // once all lifecycle events has been delivered, we can safely detroy the views\n      for (const view of destroyQueue) {\n        this.destroyView(view);\n      }\n    }\n  }\n  async transition(enteringView, leavingView, ti) {\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\n    // or if it is a portal (modal, actionsheet, etc.)\n    const opts = ti.opts;\n    const progressCallback = opts.progressAnimation\n      ? (ani) => {\n        /**\n         * Because this progress callback is called asynchronously\n         * it is possible for the gesture to start and end before\n         * the animation is ever set. In that scenario, we should\n         * immediately call progressEnd so that the transition promise\n         * resolves and the gesture does not get locked up.\n         */\n        if (ani !== undefined && !this.gestureOrAnimationInProgress) {\n          this.gestureOrAnimationInProgress = true;\n          ani.onFinish(() => {\n            this.gestureOrAnimationInProgress = false;\n          }, { oneTimeCallback: true });\n          /**\n           * Playing animation to beginning\n           * with a duration of 0 prevents\n           * any flickering when the animation\n           * is later cleaned up.\n           */\n          ani.progressEnd(0, 0, 0);\n        }\n        else {\n          this.sbAni = ani;\n        }\n      }\n      : undefined;\n    const mode = getIonMode(this);\n    const enteringEl = enteringView.element;\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    const leavingEl = leavingView && leavingView.element;\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\n    const { hasCompleted } = await transition(animationOpts);\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\n  }\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\n    /**\n     * If the transition did not complete, the leavingView will still be the active\n     * view on the stack. Otherwise unmount all the views after the enteringView.\n     */\n    const activeView = hasCompleted ? enteringView : leavingView;\n    if (activeView) {\n      this.unmountInactiveViews(activeView);\n    }\n    return {\n      hasCompleted,\n      requiresTransition: true,\n      enteringView,\n      leavingView,\n      direction: opts.direction,\n    };\n  }\n  /**\n   * Inserts a view at the specified index.\n   *\n   * When the view already is in the stack it will be moved to the new position.\n   *\n   * @param view The view to insert.\n   * @param index The index where to insert the view.\n   */\n  insertViewAt(view, index) {\n    const views = this.views;\n    const existingIndex = views.indexOf(view);\n    if (existingIndex > -1) {\n      assert(view.nav === this, 'view is not part of the nav');\n      // The view already in the stack, removes it.\n      views.splice(existingIndex, 1);\n      // and add it back at the requested index.\n      views.splice(index, 0, view);\n    }\n    else {\n      assert(!view.nav, 'nav is used');\n      // this is a new view to add to the stack\n      // create the new entering view\n      view.nav = this;\n      views.splice(index, 0, view);\n    }\n  }\n  /**\n   * Removes a view from the stack.\n   *\n   * @param view The view to remove.\n   */\n  removeView(view) {\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n    const views = this.views;\n    const index = views.indexOf(view);\n    assert(index > -1, 'view must be part of the stack');\n    if (index >= 0) {\n      views.splice(index, 1);\n    }\n  }\n  destroyView(view) {\n    view._destroy();\n    this.removeView(view);\n  }\n  /**\n   * Unmounts all inactive views after the specified active view.\n   *\n   * DOM WRITE\n   *\n   * @param activeView The view that is actively visible in the stack. Used to calculate which views to unmount.\n   */\n  unmountInactiveViews(activeView) {\n    // ok, cleanup time!! Destroy all of the views that are\n    // INACTIVE and come after the active view\n    // only do this if the views exist, though\n    if (this.destroyed) {\n      return;\n    }\n    const views = this.views;\n    const activeViewIndex = views.indexOf(activeView);\n    for (let i = views.length - 1; i >= 0; i--) {\n      const view = views[i];\n      /**\n       * When inserting multiple views via insertPages\n       * the last page will be transitioned to, but the\n       * others will not be. As a result, a DOM element\n       * will only be created for the last page inserted.\n       * As a result, it is possible to have views in the\n       * stack that do not have `view.element` yet.\n       */\n      const element = view.element;\n      if (element) {\n        if (i > activeViewIndex) {\n          // this view comes after the active view\n          // let's unload it\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n          this.destroyView(view);\n        }\n        else if (i < activeViewIndex) {\n          // this view comes before the active view\n          // and it is not a portal then ensure it is hidden\n          setPageHidden(element, true);\n        }\n      }\n    }\n  }\n  canStart() {\n    return (!this.gestureOrAnimationInProgress &&\n      !!this.swipeGesture &&\n      !this.isTransitioning &&\n      this.transInstr.length === 0 &&\n      this.canGoBackSync());\n  }\n  onStart() {\n    this.gestureOrAnimationInProgress = true;\n    this.pop({ direction: 'back', progressAnimation: true });\n  }\n  onMove(stepValue) {\n    if (this.sbAni) {\n      this.sbAni.progressStep(stepValue);\n    }\n  }\n  onEnd(shouldComplete, stepValue, dur) {\n    if (this.sbAni) {\n      this.sbAni.onFinish(() => {\n        this.gestureOrAnimationInProgress = false;\n      }, { oneTimeCallback: true });\n      // Account for rounding errors in JS\n      let newStepValue = shouldComplete ? -0.001 : 0.001;\n      /**\n       * Animation will be reversed here, so need to\n       * reverse the easing curve as well\n       *\n       * Additionally, we need to account for the time relative\n       * to the new easing curve, as `stepValue` is going to be given\n       * in terms of a linear curve.\n       */\n      if (!shouldComplete) {\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n      }\n      else {\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n      }\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n    }\n    else {\n      this.gestureOrAnimationInProgress = false;\n    }\n  }\n  render() {\n    return h(\"slot\", null);\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }; }\n  static get style() { return navCss; }\n}, [1, \"ion-nav\", {\n    \"delegate\": [16],\n    \"swipeGesture\": [1028, \"swipe-gesture\"],\n    \"animated\": [4],\n    \"animation\": [16],\n    \"rootParams\": [16],\n    \"root\": [1],\n    \"push\": [64],\n    \"insert\": [64],\n    \"insertPages\": [64],\n    \"pop\": [64],\n    \"popTo\": [64],\n    \"popToRoot\": [64],\n    \"removeIndex\": [64],\n    \"setRoot\": [64],\n    \"setPages\": [64],\n    \"setRouteId\": [64],\n    \"getRouteId\": [64],\n    \"getActive\": [64],\n    \"getByIndex\": [64],\n    \"canGoBack\": [64],\n    \"getPrevious\": [64]\n  }, undefined, {\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"root\": [\"rootChanged\"]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-nav\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-nav\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Nav);\n      }\n      break;\n  } });\n}\n\nconst IonNav = Nav;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonNav, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}